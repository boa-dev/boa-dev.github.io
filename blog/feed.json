{
    "version": "https://jsonfeed.org/version/1",
    "title": "Boa JS Blog",
    "home_page_url": "https://boajs.dev/blog",
    "description": "Boa JS Blog",
    "items": [
        {
            "id": "https://boajs.dev/blog/2024/03/07/boa-release-18",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h2>\n<p>Boa v0.18 is now available! After 7 months of development we are very happy to present you the latest\nrelease of the Boa JavaScript engine. Boa makes it easy to embed a JS engine in your projects, and\nyou can even use it from WebAssembly. See the <a href=\"https://boajs.dev/about\">about</a> page for more info.</p>\n<p>In this release, our conformance has grown from 79.36% to 85.03% in the official ECMAScript Test Suite\n(Test262). This means we now pass <strong>3,550</strong> more tests than in the previous version. Moreover, our\namount of ignored tests decreased from <strong>9,496</strong> to <strong>1,391</strong> thanks to all the new builtins we have\nimplemented for this release.</p>\n<p>You can check the full list of changes <a href=\"https://github.com/boa-dev/boa/blob/v0.18/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, and the full information on conformance\n<a href=\"https://boajs.dev/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>You probably noticed that something seems different... This release marks a major update to the design\nof our website, and the introduction of our new logo!\nWe'd like to thank <a href=\"https://github.com/ZackMitkin\" target=\"_blank\" rel=\"noopener noreferrer\">@ZackMitkin</a> for being the one that started the\nwork on this nifty redesign, and <a href=\"https://github.com/kelbazz\" target=\"_blank\" rel=\"noopener noreferrer\">@kelbazz</a> for designing the logo.\nWe're planning to add some additional pages to learn more about the APIs that Boa exposes.\nAdditionally, expect some more blog posts from us in the future! We would like to write about how to\nuse certain APIs, design challenges that we encountered while developing the engine, and internal\nimplementation details.\nSubscribe to our <a href=\"https://boajs.dev/boa/blog/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">RSS feed</a> if you're interested in staying up to date!</p>\n<p>This big release was partly possible thanks to those who have <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">supported us</a>.\nThanks to funds we've received we have been able to renew our domain name, remunerate members of the\nteam who have worked on the features released, and discuss the possibility of using dedicated servers\nfor benchmarking. If you wish to sponsor Boa, you can do so by donating to our <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">open collective</a>.\nYou can also check <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3AE-Easy\" target=\"_blank\" rel=\"noopener noreferrer\">easy</a> or <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">good first issues</a> if you want to contribute\nsome code instead.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"highlights\">Highlights<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#highlights\" class=\"hash-link\" aria-label=\"Direct link to Highlights\" title=\"Direct link to Highlights\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"were-on-test262fyi\">We're on <a href=\"https://test262.fyi/\" target=\"_blank\" rel=\"noopener noreferrer\">test262.fyi</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#were-on-test262fyi\" class=\"hash-link\" aria-label=\"Direct link to were-on-test262fyi\" title=\"Direct link to were-on-test262fyi\">​</a></h3>\n<p>Thanks to the amazing work of <a href=\"https://twitter.com/CanadaHonk\" target=\"_blank\" rel=\"noopener noreferrer\">CanadaHonk</a>, Boa is now listed on\n<a href=\"https://test262.fyi/\" target=\"_blank\" rel=\"noopener noreferrer\">test262.fyi</a>! This is a daily runner of the official test262 test suite that\nruns a nightly build of Boa, along with other engines, and updates the results every day. This is\nusing the tip of the main branch of Boa alongside the <a href=\"https://github.com/tc39/test262\" target=\"_blank\" rel=\"noopener noreferrer\">latest test262</a>\nchanges pushed to their main branch.</p>\n<p>This is a great achievement for us and we are very proud to be listed alongside other major JavaScript\nengines. It should be much easier for users to compare Boa's conformance tests with other engines.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"temporal\">Temporal<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#temporal\" class=\"hash-link\" aria-label=\"Direct link to Temporal\" title=\"Direct link to Temporal\">​</a></h3>\n<p>A lot of work has been put over the past few months on the Temporal API. The Temporal API is a new\nset of built-in objects and functions that is designed to be a more modern replacement for the <code>Date</code>\nobject, providing a more feature-rich and flexible API for working with dates and times.</p>\n<p>It is currently a <a href=\"https://tc39.es/proposal-temporal/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">stage 3 proposal</a> and we are working\nalongside the TC39 champions to put together a solid implementation. Since Temporal is such an\nextensive specification, we have done most of the work outside of Boa so that it can be used in other\nprojects. This work can be found in the <a href=\"https://github.com/boa-dev/temporal/\" target=\"_blank\" rel=\"noopener noreferrer\">temporal_rs</a> repository.</p>\n<p>We hope to release a full blog post on Temporal in the future, but for now, let's look at a couple small\nexamples of Temporal.</p>\n<p>In JavaScript:</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// JavaScript's Temporal built-in object.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// For example, you can customize you're own calendar implementations!</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">CustomCalendar</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">extends</span><span class=\"token plain\"> </span><span class=\"token class-name\">Temporal</span><span class=\"token class-name punctuation\" style=\"color:#393A34\">.</span><span class=\"token class-name\">Calendar</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">constructor</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">super</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"iso8601\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">inLeapYear</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">dateLike</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    messageInACalendar </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"It's a message in a Calendar!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> dateLike</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">daysInYear</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">366</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> messageInACalendar</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Construct the CustomCalendar.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> calendar </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">CustomCalendar</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> boaReleaseDay </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Temporal</span><span class=\"token class-name punctuation\" style=\"color:#393A34\">.</span><span class=\"token class-name\">PlainDate</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2024</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> calendar</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> leap </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> boaReleaseDay</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">inLeapYear</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">messageInACalendar</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Outputs: \"It's a message in a Calendar!\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In Rust:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Rust's `temporal_rs` crate</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">temporal_rs</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token namespace\" style=\"opacity:0.7\">components</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token namespace\" style=\"opacity:0.7\">calendar</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">CalendarSlot</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Date</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">options</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">ArithmeticOverflow</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">std</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token keyword\" style=\"color:#00009f\">str</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">FromStr</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Create a Calendar slot value from a string</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> calendar </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">CalendarSlot</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_str</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"iso8601\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Create a date. The date can be made to either reject or constrain the input.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> date </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Date</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2024</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> calendar</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">ArithmeticOverflow</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Reject</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">date</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">iso_year</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> date</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">year</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Please note that Temporal is still an experimental feature, and while a lot of progress\nhas been made, there is still more work to be completed until it is production ready.</p>\n<p>If you're interested in learning more or want to contribute to the native Rust implementation of\nTemporal, feel free to check out <code>temporal_rs</code>'s <a href=\"https://github.com/boa-dev/temporal/issues\" target=\"_blank\" rel=\"noopener noreferrer\">issues</a>!</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"regexp\">RegExp<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#regexp\" class=\"hash-link\" aria-label=\"Direct link to RegExp\" title=\"Direct link to RegExp\">​</a></h3>\n<p>Over the past 7 months there has been some effort poured into an improved implementation of RegExp.\nThis includes:</p>\n<ul>\n<li>Support for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/hasIndices\" target=\"_blank\" rel=\"noopener noreferrer\"><code>RegExp.prototype.hasIndices</code></a> (Thanks to <a href=\"https://github.com/dirkdev98\" target=\"_blank\" rel=\"noopener noreferrer\">@dirkdev98</a>!).</li>\n<li>Support for Unicode sets, aka the <code>v</code> flag.</li>\n<li>Support for UTF-16 text searches.</li>\n<li>General fixes around <code>RegExp()</code>, <code>RegExp.toString()</code> and <code>RegExp.match()</code>.</li>\n</ul>\n<p>Here is a table showing the progress of RegExp between v0.17 and v0.18:</p>\n<table><thead><tr><th>Test262</th><th>v0.17 (July 2023)</th><th>v0.18 (Feb 2024)</th></tr></thead><tbody><tr><td>Total</td><td>1,915</td><td>1,920</td></tr><tr><td>Pass</td><td>1,071</td><td>1,878</td></tr><tr><td>Fail</td><td>132</td><td>2</td></tr><tr><td>Skipped</td><td>712</td><td>40</td></tr></tbody></table>\n<p>That's a whopping 807 more tests passed!</p>\n<p>We only have two failing tests left and both are caused by the lack of Unicode 15.1 support.\nThe remaining skipped tests are all related to stage 3 proposals.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"shared-array-buffer--atomics\">Shared Array Buffer + Atomics<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#shared-array-buffer--atomics\" class=\"hash-link\" aria-label=\"Direct link to Shared Array Buffer + Atomics\" title=\"Direct link to Shared Array Buffer + Atomics\">​</a></h3>\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\" target=\"_blank\" rel=\"noopener noreferrer\">SharedArrayBuffer</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics\" target=\"_blank\" rel=\"noopener noreferrer\">Atomics</a> builtins have been implemented in this release.\nThis means embedders can now orchestrate <code>Context</code>s running on separate threads to execute\nshared work between them.</p>\n<p>The <code>Atomics</code> builtin object contains several static methods that allow executing atomic operations\non shared memory. In addition to that, it also contains the <code>wait()</code> and <code>notify()</code> methods, which\noffers the same functionality as Linux futexes for JS's worker threads:</p>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// On the main thread</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> sab </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">SharedArrayBuffer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">1024</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> int32 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">sab</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">send</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">worker1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> int32</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">send</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">worker2</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> int32</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// On worker1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">int32 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">receive</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token maybe-class-name\">Atomics</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">wait</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">int32</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">int32</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 123</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// On worker2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">int32 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">receive</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">int32</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 0</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token maybe-class-name\">Atomics</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">store</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">int32</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">123</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token maybe-class-name\">Atomics</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">notify</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">int32</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"intl-updates\">Intl updates<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#intl-updates\" class=\"hash-link\" aria-label=\"Direct link to Intl updates\" title=\"Direct link to Intl updates\">​</a></h2>\n<p>We're keeping the good progress on our <code>Intl</code> implementation, and now we have the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.PluralRules</code></a>\nbuiltin and (a first prototype of) the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.NumberFormat</code></a> builtin in place.</p>\n<p>As mentioned by the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules#description\" target=\"_blank\" rel=\"noopener noreferrer\">Mozilla docs</a>:</p>\n<blockquote>\n<p>Languages use different patterns for expressing both plural numbers of items (cardinal numbers) and\nfor expressing the order of items (ordinal numbers). English has two forms for expressing cardinal\nnumbers: one for the singular \"item\" (1 hour, 1 dog, 1 fish) and the other for zero or any other\nnumber of \"items\" (0 hours, 2 lemmings, 100000.5 fish), while Chinese has only one form, and Arabic\nhas six! Similarly, English has four forms for expressing ordinal numbers: \"th\", \"st\", \"nd\", \"rd\",\ngiving the sequence: 0th, 1st, 2nd, 3rd, 4th, 5th, ..., 21st, 22nd, 23rd, 24th, 25th, and so on,\nwhile both Chinese and Arabic only have one form for ordinal numbers.</p>\n</blockquote>\n<p>This variation between languages makes it really hard to properly localize a cardinal or ordinal number.\nTo fix this, the CLDR (Common Locale Data Repository) project has been collecting information about\nthe \"plural category\" of certain numeric patterns on many languages, and <code>Intl.PluralRules</code> objects\nare the builtin objects that enable obtaining this information in an easy way:</p>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> pr </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Intl</span><span class=\"token class-name punctuation\" style=\"color:#393A34\">.</span><span class=\"token class-name\">PluralRules</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"en-US\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">type</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"ordinal\"</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> suffixes </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Map</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"one\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"st\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"two\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"nd\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"few\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"rd\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"other\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"th\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token function-variable function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> suffixes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">pr</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">select</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">n</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"th\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"st\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"nd\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"rd\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"th\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">21</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"st\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">42</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"nd\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">getSuffix</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">73</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// \"th\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>On the same vein, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.NumberFormat</code></a> objects can format numbers in a language-sensitive way:</p>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> nf </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Intl</span><span class=\"token class-name punctuation\" style=\"color:#393A34\">.</span><span class=\"token class-name\">NumberFormat</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"bn\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token literal-property property\" style=\"color:#36acaa\">useGrouping</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"min2\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token literal-property property\" style=\"color:#36acaa\">minimumSignificantDigits</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token literal-property property\" style=\"color:#36acaa\">maximumSignificantDigits</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nf</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">format</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">10003.1234</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ১০,০০৩.১২</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>However, we need to mention that <code>Intl.NumberFormat</code> is NOT feature complete at the moment, since it\nonly allows formatting numbers in the standard notation with no currencies or units. We're still\nworking on adding the missing features, but we hope that this initial prototype is at least useful\nfor some use cases.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"builtins-updates\">Builtins updates<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#builtins-updates\" class=\"hash-link\" aria-label=\"Direct link to Builtins updates\" title=\"Direct link to Builtins updates\">​</a></h2>\n<p>While this new release is filled with shiny new features and APIs, it should be noted that the\nECMAScript 262 specification is constantly evolving, which is why there are also a lot of small\nchanges and additions to existing builtins that keep Boa updated to the latest revisions of the\nspecification.</p>\n<p>All examples were taken from the <a href=\"https://developer.mozilla.org/en-US\" target=\"_blank\" rel=\"noopener noreferrer\">Mozilla Web Docs</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"findlast-and-findlastindex-on-typedarray\"><a href=\"https://github.com/boa-dev/boa/pull/3135\" target=\"_blank\" rel=\"noopener noreferrer\">findLast and findLastIndex on TypedArray</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#findlast-and-findlastindex-on-typedarray\" class=\"hash-link\" aria-label=\"Direct link to findlast-and-findlastindex-on-typedarray\" title=\"Direct link to findlast-and-findlastindex-on-typedarray\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">isPrime</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">element </span><span class=\"token operator\" style=\"color:#393A34\">%</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">||</span><span class=\"token plain\"> element </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">false</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">for</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> factor </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> factor </span><span class=\"token operator\" style=\"color:#393A34\">&lt;=</span><span class=\"token plain\"> </span><span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">sqrt</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">element</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> factor </span><span class=\"token operator\" style=\"color:#393A34\">+=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">element </span><span class=\"token operator\" style=\"color:#393A34\">%</span><span class=\"token plain\"> factor </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">false</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> uint8 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">6</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">uint8</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">findLast</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">isPrime</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// undefined (no primes in array)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">uint8 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">9</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">11</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">uint8</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">findLast</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">isPrime</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 11</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"stringprototypeiswellformed-and-stringprototypetowellformed\"><a href=\"https://github.com/boa-dev/boa/pull/3187\" target=\"_blank\" rel=\"noopener noreferrer\">String.prototype.isWellFormed and String.prototype.toWellFormed</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#stringprototypeiswellformed-and-stringprototypetowellformed\" class=\"hash-link\" aria-label=\"Direct link to stringprototypeiswellformed-and-stringprototypetowellformed\" title=\"Direct link to stringprototypeiswellformed-and-stringprototypetowellformed\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> illFormed </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"https://example.com/search?q=\\uD800\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword control-flow\" style=\"color:#00009f\">try</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">encodeURI</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">illFormed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">catch</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">e</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">e</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// URIError: URI malformed</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword control-flow\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">illFormed</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">isWellFormed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">encodeURI</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">illFormed</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">warn</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Ill-formed strings encountered.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Ill-formed strings encountered.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"change-array-by-copy\"><a href=\"https://github.com/boa-dev/boa/pull/3412\" target=\"_blank\" rel=\"noopener noreferrer\">Change Array by copy</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#change-array-by-copy\" class=\"hash-link\" aria-label=\"Direct link to change-array-by-copy\" title=\"Direct link to change-array-by-copy\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> months </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"Mar\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Jan\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Feb\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Dec\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> sortedMonths </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> months</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">toSorted</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">sortedMonths</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ['Dec', 'Feb', 'Jan', 'Mar']</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">months</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ['Mar', 'Jan', 'Feb', 'Dec']</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> values </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">21</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> sortedValues </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> values</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">toSorted</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">a</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> b</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> a </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> b</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">sortedValues</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// [1, 2, 10, 21]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">values</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// [1, 10, 21, 2]</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"grouping-functions\"><a href=\"https://github.com/boa-dev/boa/pull/3420\" target=\"_blank\" rel=\"noopener noreferrer\">Grouping functions</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#grouping-functions\" class=\"hash-link\" aria-label=\"Direct link to grouping-functions\" title=\"Direct link to grouping-functions\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> array </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">3</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// `Object.groupBy` groups items by arbitrary key.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// In this case, we're grouping by even/odd keys</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">groupBy</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">array</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">num</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> index</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> num </span><span class=\"token operator\" style=\"color:#393A34\">%</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"even\"</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"odd\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// =&gt;  { odd: [1, 3, 5], even: [2, 4] }</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// `Map.groupBy` returns items in a Map, and is useful for grouping</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// using an object key.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> odd </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">odd</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> even </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">even</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">true</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token known-class-name class-name\">Map</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">groupBy</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">array</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">num</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> index</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> num </span><span class=\"token operator\" style=\"color:#393A34\">%</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"> even </span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> odd</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// =&gt;  Map { {odd: true}: [1, 3, 5], {even: true}: [2, 4] }</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"resizable-buffers\"><a href=\"https://github.com/boa-dev/boa/pull/3634\" target=\"_blank\" rel=\"noopener noreferrer\">Resizable buffers</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#resizable-buffers\" class=\"hash-link\" aria-label=\"Direct link to resizable-buffers\" title=\"Direct link to resizable-buffers\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> buffer </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">maxByteLength</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">16</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">byteLength</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 8</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">buffer</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">resize</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">byteLength</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 12</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"transferrable-buffers\"><a href=\"https://github.com/boa-dev/boa/pull/3649\" target=\"_blank\" rel=\"noopener noreferrer\">Transferrable buffers</a><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#transferrable-buffers\" class=\"hash-link\" aria-label=\"Direct link to transferrable-buffers\" title=\"Direct link to transferrable-buffers\">​</a></h3>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> buffer </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">maxByteLength</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">16</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> view </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">view</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">view</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Copy the buffer to a smaller size</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> buffer2 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> buffer</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">transfer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">byteLength</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 4</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">maxByteLength</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 16</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> view2 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">view2</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 2</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">view2</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// undefined</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">buffer2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">resize</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">8</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">view2</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">7</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 0</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Copy the buffer to a larger size within maxByteLength</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> buffer3 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> buffer2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">transfer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">12</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">buffer3</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">byteLength</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 12</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Copy the buffer to a larger size than maxByteLength</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">buffer3</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">transfer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">20</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// RangeError: Invalid array buffer length</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"apis-updates\">APIs updates<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#apis-updates\" class=\"hash-link\" aria-label=\"Direct link to APIs updates\" title=\"Direct link to APIs updates\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"experimental-features\">Experimental features<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#experimental-features\" class=\"hash-link\" aria-label=\"Direct link to Experimental features\" title=\"Direct link to Experimental features\">​</a></h3>\n<p>Some of you might have noticed that the previous section contained a builtin addition that isn't\ntechnically a \"spec addition\", but a \"proposal for a spec addition\". To clarify, the\n<a href=\"https://github.com/tc39/proposal-arraybuffer-transfer\" target=\"_blank\" rel=\"noopener noreferrer\"><code>ArrayBuffer.prototype.transfer</code> and friends</a> proposal is, at the time of the publication\nof this post, still at stage 3 on the <a href=\"https://tc39.es/process-document/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 Process</a>. Generally, stages 3 and below need to be\ngated by implementors; this avoids exposing experimental APIs to users.</p>\n<p>Mirroring this general idea, we introduced a new <code>experimental</code> feature for the <code>boa_engine</code> crate.\nEnabling this feature will make it possible to test future proposals for the ECMAScript specification\nusing Boa, but we do not recommend enabling the feature in production environments.</p>\n<p>We're still trying to <a href=\"https://github.com/boa-dev/boa/issues/3377\" target=\"_blank\" rel=\"noopener noreferrer\">find a way to enable experimental features in a more granular way</a>,\nsince the current flag allows enabling either all or no experimental features; definitely not ideal.\nSo, expect some API changes in the future around this. But for now, have fun testing the new proposals!</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hostdefined-fields\"><code>[[HostDefined]]</code> fields<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#hostdefined-fields\" class=\"hash-link\" aria-label=\"Direct link to hostdefined-fields\" title=\"Direct link to hostdefined-fields\">​</a></h3>\n<p>In this version, we introduced a new API to attach custom data to realms, scripts and modules.\nThe <a href=\"https://docs.rs/boa_engine/0.18.0/boa_engine/struct.HostDefined.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>HostDefined</code></a> struct is a more composable way of attaching custom data. Instead of attaching\nonly a single type casted to an <code>Any</code>, you can insert many types to the <code>HostDefined</code> map, and\nevery separate type will have its own value stored inside the map.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Example snippet taken from https://github.com/boa-dev/boa/blob/main/examples/src/bin/host_defined.rs</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Check that file for a more extensive example.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Custom host-defined struct that has some state, and can be shared between JavaScript and rust.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[derive(Default, Trace, Finalize, JsData)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">struct</span><span class=\"token plain\"> </span><span class=\"token type-definition class-name\">CustomHostDefinedStruct</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[unsafe_ignore_trace]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    counter</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">usize</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// We create a new `Context` to create a new Javascript executor.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Get the realm from the context.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> realm </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">realm</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Insert a default CustomHostDefinedStruct.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">realm</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">host_defined_mut</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">insert_default</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">CustomHostDefinedStruct</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">realm</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">host_defined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">has</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">CustomHostDefinedStruct</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Get the [[HostDefined]] field from the realm and downcast it to our concrete type.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> host_defined </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> realm</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">host_defined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token class-name\">Some</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">host_defined</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> host_defined</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">CustomHostDefinedStruct</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token class-name\">Err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsNativeError</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">typ</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">with_message</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Realm does not have HostDefined field\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Assert that the [[HostDefined]] field is in it's initial state.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">host_defined</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">counter</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"class-redesign--api-enhancements\"><code>Class</code> redesign + API enhancements<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#class-redesign--api-enhancements\" class=\"hash-link\" aria-label=\"Direct link to class-redesign--api-enhancements\" title=\"Direct link to class-redesign--api-enhancements\">​</a></h3>\n<p>There were some small improvements made to our <code>Class</code> trait API, including a way to cache\ncustom <code>Class</code> implementors into the <code>Context</code> itself for easy access to the constructor and\nprototype objects. This is part of an ongoing effort about\n<a href=\"https://github.com/boa-dev/boa/issues/3314\" target=\"_blank\" rel=\"noopener noreferrer\">improving the APIs around the <code>Class</code> trait</a>.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// An example of what this new API allows</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Assume there's already a `Person` struct that implements `Class`.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_class</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">expect</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"the Person builtin shouldn't exist\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Previously, the line below had to be done manually using something like</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// let prototype = context</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .global_object()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .get(js_string!(\"Person\"), context)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .unwrap()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .as_object()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .cloned()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .unwrap()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .get(js_string(\"prototype\"), context)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .unwrap()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .as_object()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .cloned()</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//     .unwrap();</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Yeah... it's a handful.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> prototype </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_global_class</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">prototype</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"runtime-limits\">Runtime limits<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#runtime-limits\" class=\"hash-link\" aria-label=\"Direct link to Runtime limits\" title=\"Direct link to Runtime limits\">​</a></h3>\n<p>We added new APIs to limit the execution of the engine at runtime! This new API has some limitations\nsuch as being unable to track limits inside native Rust functions, and we're still working on offering\nmore options for other runtime limits such as heap size limits, but we hope this is at least useful\nfor some users.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Snippet taken from https://github.com/boa-dev/boa/blob/main/examples/src/bin/runtime_limits.rs</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Check that file for the full example.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Create the JavaScript context.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Set the context's runtime limit on loops to 10 iterations.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">runtime_limits_mut</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">set_loop_iteration_limit</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Here we exceed the limit by 1 iteration and a `RuntimeLimit` error is thrown.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// This error cannot be caught in JavaScript, it can only be caught in Rust code.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">r\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        try {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">            for (let i = 0; i &lt; 12; ++i) { }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        } catch (e) {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    \"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">result</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">is_err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"synthetic-modules\">Synthetic modules<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#synthetic-modules\" class=\"hash-link\" aria-label=\"Direct link to Synthetic modules\" title=\"Direct link to Synthetic modules\">​</a></h3>\n<p>We added support for creating synthetic modules from Rust code. This allows exposing a set of\nfunctions and properties to other modules without having to evaluate Javascript code.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Taken from https://github.com/boa-dev/boa/blob/main/examples/src/bin/synthetic.rs</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// See the file for the full example.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> sum </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">FunctionObjectBuilder</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">realm</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">NativeFunction</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_fn_ptr</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">_</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> args</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> ctx</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> ctx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">length</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"sum\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">build</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> operations </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Module</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">synthetic</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Make sure to list all exports beforehand.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"sum\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// The initializer is evaluated every time a module imports this synthetic module,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// so we avoid creating duplicate objects by capturing and cloning them instead.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">SyntheticModuleInitializer</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_copy_closure_with_captures</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">module</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> fns</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> _</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Running initializer!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">set_export</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"sum\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> fns</span><span class=\"token number\" style=\"color:#36acaa\">.0</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">sum</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/* ... */</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    context</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">loader</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">insert</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">PathBuf</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"./scripts/modules\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">canonicalize</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">join</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"operations.mjs\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    operations</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// ...</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"async-eval\">Async eval<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#async-eval\" class=\"hash-link\" aria-label=\"Direct link to Async eval\" title=\"Direct link to Async eval\">​</a></h3>\n<p>Due to popular demand, we added some APIs that allow running scripts in an asynchronous way, making\nit possible to share some workload between async tasks and the execution of the engine itself.\nNote that, by the single-threaded nature of JS engines, all futures returned by Boa cannot implement\nneither <code>Send</code> nor <code>Sync</code>.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> src </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">r#\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">  let array = new Array([15, 20, 35, 123, 65, 12]);</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">  array.sort();</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">  console.log(array);</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">\"#</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> src </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Script</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">parse</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">src</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> task </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">async</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">move</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> src</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">evaluate_async</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token keyword\" style=\"color:#00009f\">await</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"{:?}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> result</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">display</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">block_on</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token macro property\" style=\"color:#36acaa\">join!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token function\" style=\"color:#d73a49\">long_task</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> task</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"jserasederror\"><code>JsErasedError</code><a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#jserasederror\" class=\"hash-link\" aria-label=\"Direct link to jserasederror\" title=\"Direct link to jserasederror\">​</a></h3>\n<p>Don't you hate when you try to <code>?</code> a <code>Result&lt;T, JsError&gt;</code> and the compiler just complains saying\nsomething like</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">error</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token constant\" style=\"color:#36acaa\">E0277</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> `</span><span class=\"token class-name\">Rc</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token namespace\" style=\"opacity:0.7\">num_bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token namespace\" style=\"opacity:0.7\">bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">BigInt</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">` cannot be sent between threads safely</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">   </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> tests</span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\">tester</span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\">src</span><span class=\"token operator\" style=\"color:#393A34\">/</span><span class=\"token plain\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">rs</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token number\" style=\"color:#36acaa\">190</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token number\" style=\"color:#36acaa\">52</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token number\" style=\"color:#36acaa\">190</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\">     </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\">                                                    </span><span class=\"token operator\" style=\"color:#393A34\">^</span><span class=\"token plain\"> `</span><span class=\"token class-name\">Rc</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token namespace\" style=\"opacity:0.7\">num_bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token namespace\" style=\"opacity:0.7\">bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">BigInt</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">` cannot be sent between threads safely</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">|</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> help</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> within `</span><span class=\"token class-name\">JsError</span><span class=\"token plain\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> the </span><span class=\"token keyword\" style=\"color:#00009f\">trait</span><span class=\"token plain\"> `</span><span class=\"token class-name\">Send</span><span class=\"token plain\">` is not implemented </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> `</span><span class=\"token class-name\">Rc</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token namespace\" style=\"opacity:0.7\">num_bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token namespace\" style=\"opacity:0.7\">bigint</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">BigInt</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">`</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> help</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> the following other types implement </span><span class=\"token keyword\" style=\"color:#00009f\">trait</span><span class=\"token plain\"> `</span><span class=\"token class-name\">FromResidual</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Result</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">F</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token class-name\">FromResidual</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Yeet</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">E</span><span class=\"token operator\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">              </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Result</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">F</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token class-name\">FromResidual</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Result</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Infallible</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">E</span><span class=\"token operator\" style=\"color:#393A34\">&gt;&gt;</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Well, say no more to missing <code>Send</code>s in your daily life! We present to you, <code>JsErasedError</code>!</p>\n<p>Jokes aside, using <code>JsError</code> is difficult from an embedder's perspective because <code>JsError</code> can be\nany arbitrary value, including non-<code>Send</code> values such as <code>JsObject</code>, <code>JsString</code> or <code>JsBigInt</code>.\nThis makes <code>JsError</code> automatically incompatible with libraries like <code>anyhow</code> or <code>eyre</code> that expect\nonly <code>Send</code> errors.</p>\n<p>To solve this, we introduced a new <code>JsError::into_erased</code> method which returns a thread-safe\nversion of <code>JsError</code> that is compatible with <code>anyhow</code>, <code>eyre</code> and other error-reporting libraries.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">eyre</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">Result</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> value </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">map_err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">err</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> err</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into_erased</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// No compiler errors!</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Why not call it <code>JsSendError</code> instead of <code>JsErasedError</code>? Well, it is generally not possible to\nconvert a <code>JsError</code> into a <code>JsErasedError</code> without losing some information in the conversion. However,\n<code>JsSendError</code> gave the appearance of being <code>JsError</code> but <code>Send</code>, which is really not true. <code>JsErasedError</code>,\non the other hand, makes it clear the conversion is not lossless. Feel free to ping us if you have a\nbetter name for it though!</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optimizations\">Optimizations<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#optimizations\" class=\"hash-link\" aria-label=\"Direct link to Optimizations\" title=\"Direct link to Optimizations\">​</a></h2>\n<p>The following benchmarks below are taken from the <a href=\"https://github.com/mozilla/arewefastyet/tree/master/benchmarks/v8-v7\" target=\"_blank\" rel=\"noopener noreferrer\">v8 benchmark suite</a>. This benchmark is deprecated,\nbut is useful in this context to show the performance improvements between versions.</p>\n<p>(higher numbers are better)</p>\n<table><thead><tr><th>Boa Version</th><th>Richards</th><th>DeltaBlue</th><th>Crypto</th><th>RayTrace</th><th>EarleyBoyer</th><th>Splay</th><th>NavierStokes</th><th>Total</th></tr></thead><tbody><tr><td>v0.16</td><td>29.0</td><td>29.2</td><td>42.1</td><td>107</td><td>105</td><td>111</td><td>15.4</td><td>49.1</td></tr><tr><td>v0.17</td><td>34.3</td><td>39.1</td><td>49.1</td><td>134</td><td>119</td><td>141</td><td>11.9</td><td>56.2</td></tr><tr><td>v0.18</td><td>49.8</td><td>53.9</td><td>52.1</td><td>161</td><td>152</td><td>154</td><td>102</td><td>91.5</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"inline-caching\">Inline Caching<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#inline-caching\" class=\"hash-link\" aria-label=\"Direct link to Inline Caching\" title=\"Direct link to Inline Caching\">​</a></h3>\n<p>Thanks to the implementation of <a href=\"https://github.com/boa-dev/boa/blob/main/docs/shapes.md\" target=\"_blank\" rel=\"noopener noreferrer\">Object Shapes</a>\nin version <code>v0.17</code>, we were able to further improve the performance of the engine by implementing\nInline Caching. The concept of Inline Caching is based on the idea that a property access for a\nvariable will usually only be applied to objects of similar Shapes. To picture this, let's examine\nthe following code:</p>\n<div class=\"language-js codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-js codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">attach</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">obj1</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> obj2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  obj1</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">attach</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> obj2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">getHandler</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>On interpreters that don't implement any kind of caching, the previous code would have to make a\nproperty lookup for the <code>getHandler</code> method every time that method is called. This is really inefficient\nfor a simple reason: <code>getHandler</code> could be inside <code>obj2</code>, or it could be inside <code>obj2.prototype</code>,\nor it could be inside <code>obj2.prototype.prototype</code>... in fact, <code>getHandler</code> could be anywhere on the\ninheritance chain of <code>obj2</code>!</p>\n<p>The easy approach to solve this is to cache the method lookup inside <code>obj2</code> itself using an associative\nmap of some sorts. This is nice, but also a bit wasteful because we would be allocating a new\nassociative map for all instances of <code>obj2</code>, even if the map is only really used inside <code>attach</code>.</p>\n<p>What then? Well, we can apply the \"inline\" part of an inline cache now! Just allocate an array of\nall property accesses within the <code>attach</code> function and assign an index to every one of them.\nInitially, a property access is uninitialized. Once we reach a particular uninitialized property access,\nit performs the dynamic lookup and changes its corresponding array slot to be a\nweak reference to the object's shape. If we reach the same property access again, we can retrieve the\nstored shape and directly access the object's dense storage without doing a property lookup!</p>\n<p>However, there's a caveat. If <code>obj2.getHandler</code> is evaluated twice with objects of different shapes,\nthe stored shape would be invalid for the second property access. In this case, we can rollback the\naccess to the uninitialized state and make a manual property lookup once again.\nThis is known as monomorphic inline caching. There's also polymorphic inline caching, which\nstores several shapes per access instead of rolling back to the uninitialized state.</p>\n<p>Currently we do eager monomorphic inline caching, so there is plently of room for improvements that\nwe're planning to do in the future!</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"road-to-10\">Road to 1.0<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#road-to-10\" class=\"hash-link\" aria-label=\"Direct link to Road to 1.0\" title=\"Direct link to Road to 1.0\">​</a></h2>\n<p>As Boa is being used by more projects it is important we can provide a stable and reliable API. We\ndon't feel like we're quite there yet, but after a discussion with the team we have decided to aim\nfor a 1.0 release in the near future. This will be a big milestone for us and we hope to have a lot\nof new features and improvements to show off by then.</p>\n<p>We will keep our focus on the public API for those embedding Boa. We will also be working on improving\nthe performance of the engine. If you wanted to offer feedback on the API feel free to reach out to\nus via Github or Discord.</p>\n<p>You can keep an eye on the project to reach 1.0 <a href=\"https://github.com/orgs/boa-dev/projects/2/views/1\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\nWe hopefully don't forsee this project getting much bigger as most issues such as spec conformance\nor performance are a going-concern.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusion\">Conclusion<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#conclusion\" class=\"hash-link\" aria-label=\"Direct link to Conclusion\" title=\"Direct link to Conclusion\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-can-you-support-boa\">How can you support Boa?<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#how-can-you-support-boa\" class=\"hash-link\" aria-label=\"Direct link to How can you support Boa?\" title=\"Direct link to How can you support Boa?\">​</a></h3>\n<p>Boa is an independent JavaScript engine implementing the ECMAScript specification, we rely on the\nsupport of the community to keep it going. If you want to support us, you can do so by donating to\nour <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">open collective</a>. Proceeeds here go towards this very website, the domain name, and remunerating\nmembers of the team who have worked on the features released.</p>\n<p>If financial contribution is not your strength, you can contribute by asking to be assigned to one of\nour <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+no%3Aassignee\" target=\"_blank\" rel=\"noopener noreferrer\">open issues</a>, and asking for mentoring if you don't know your way around the engine. Our\n<a href=\"https://github.com/boa-dev/boa/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">contribution guide</a> should help you here. If you are more used to working with JavaScript or frontend\nweb development, we also welcome help to improve our web presence, either in <a href=\"https://github.com/boa-dev/boa-dev.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">our website</a>, or in our\n<a href=\"https://github.com/boa-dev/boa/issues/820\" target=\"_blank\" rel=\"noopener noreferrer\">testing representation</a> page or benchmarks page. You can also contribute to our Criterion benchmark\ncomparison GitHub <a href=\"https://github.com/boa-dev/criterion-compare-action\" target=\"_blank\" rel=\"noopener noreferrer\">action</a>.</p>\n<p>We are also looking to improve the documentation of the engine, both for developers of the engine\nitself and for users of the engine. Feel free to contact us in <a href=\"https://discord.gg/tUFFk9Y\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2024/03/07/boa-release-18#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h3>\n<p>Once again, big thanks to <a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2023-07-08&amp;to=2024-03-05&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">all the contributors</a> of this release!!</p>",
            "url": "https://boajs.dev/blog/2024/03/07/boa-release-18",
            "title": "Boa release v0.18",
            "summary": "Summary",
            "date_modified": "2024-03-07T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2023/07/08/boa-release-17",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h2>\n<p>Boa v0.17 is now available! This is one of the biggest Boa releases since the project started, and after around 7 months\nof development, we are very happy to present you the latest release of the Boa JavaScript engine. Boa makes it easy to\nembed a JS engine in your projects, and you can even use it from WebAssembly. See the <a href=\"https://boajs.dev/about\">about</a> page for more info.</p>\n<p>In this release, our conformance has grown from 74.53% to 78.74% in the official ECMAScript Test Suite (Test262). While\nthis might look as a small increase, we now pass <strong>6,079</strong> more tests than in the previous version. In any case, the big\nchanges in this release are not related to conformance, but to huge internal enhancements and new APIs that you will be\nable to use.</p>\n<p>You can check the full list of changes <a href=\"https://github.com/boa-dev/boa/blob/v0.17/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, and the full information on conformance <a href=\"https://boajs.dev/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>Moreover, this big release was partly possible thanks to a grant by <a href=\"https://litprotocol.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Lit Protocol</a>. Thanks to\nthis grant, we were able to remunerate 2 team members for their 20h/week work each during three and a half months. If\nyou wish to sponsor Boa, you can do so by donating to our <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">open collective</a>. You can also check\n<a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3AE-Easy\" target=\"_blank\" rel=\"noopener noreferrer\">easy</a> or <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">good first issues</a>.</p>\n<p>Furthermore, we now have a new domain for Boa, <a href=\"https://boajs.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">boajs.dev</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"highlights\">Highlights<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#highlights\" class=\"hash-link\" aria-label=\"Direct link to Highlights\" title=\"Direct link to Highlights\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"modules\">Modules<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#modules\" class=\"hash-link\" aria-label=\"Direct link to Modules\" title=\"Direct link to Modules\">​</a></h3>\n<p>Boa finally has a module system! This implementation tries to closely follow ECMAScript's <a href=\"https://tc39.es/ecma262/#sec-modules\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Modules</strong></a>\nspecification which includes some useful hooks to customize module loading, making it possible to load modules from\nseveral sources, fetch modules from an URL and even asynchronously load and parse them to avoid blocking execution; see\nthe <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/module/trait.ModuleLoader.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>ModuleLoader</code></a> for more information.</p>\n<p>We also implemented a simple loader (currently the default module loader), which should fulfill most of the simpler use cases:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Creates a new module loader that uses the current directory to resolve module imports.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> loader </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">SimpleModuleLoader</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\".\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Need to convert it to either a `&amp;dyn ModuleLoader` or a `Rc&lt;dyn ModuleLoader&gt;` in order</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// to pass it to the context.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> dyn_loader</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">dyn</span><span class=\"token plain\"> </span><span class=\"token class-name\">ModuleLoader</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> loader</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">builder</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">module_loader</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">dyn_loader</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">build</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> source </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"1 + 3\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> module </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Module</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">parse</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">source</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// `main.mjs` or any of its imports could import `main.mjs` itself, so we</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// insert it into the loader for good measure.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">loader</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">insert</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"main.mjs\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_path_buf</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// All modules use promises to signal completion of its lifecycle.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// The utility method `load_link_evaluate` calls `load`, then `link` and</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// finally `evaluate`, returning an error if any call fails.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> promise </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> module</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">load_link_evaluate</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Important to push the job queue forward! Otherwise, the modules won't progress</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// on their lifecycle.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">run_jobs</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// All modules return `undefined` if they're successfully evaluated.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">promise</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">PromiseState</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Fulfilled</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>For a more extensive, descriptive example that uses a real directory, you can check out <a href=\"https://github.com/boa-dev/boa/blob/v0.17/boa_examples/src/bin/modules.rs\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>boa_examples</strong></a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"spec-version-conformance\">Spec Version Conformance<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#spec-version-conformance\" class=\"hash-link\" aria-label=\"Direct link to Spec Version Conformance\" title=\"Direct link to Spec Version Conformance\">​</a></h3>\n<p>Something we get asked a lot is <em>\"Do you support ES5 or ES6\"</em>? or <em>\"How far away are you from supporting ESX\"</em>?\nWe're pleased to say we've updated our conformance board to show you how we're doing across ES versions.</p>\n<p>Just navigate to our <a href=\"https://boajs.dev/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">Test262 Dashboard</a>, select \"Test Results\" on our main branch, and\nthen you can use the dropdown underneath to see how we're doing on each version. ES5 and ES6 are very close, you can see\nwe're only a few tests away from them being fully implemented.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"optimizations\">Optimizations<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#optimizations\" class=\"hash-link\" aria-label=\"Direct link to Optimizations\" title=\"Direct link to Optimizations\">​</a></h3>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"constant-folding-optimization\">Constant folding optimization<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#constant-folding-optimization\" class=\"hash-link\" aria-label=\"Direct link to Constant folding optimization\" title=\"Direct link to Constant folding optimization\">​</a></h4>\n<p>Constant folding expression is a powerful compiler optimization technique that significantly enhances the efficiency and\nperformance of compiled programs. This optimization, now incorporated in the latest release, aims to reduce runtime\noverhead by evaluating constant expressions at compile-time.</p>\n<p>With constant folding expression optimization, the compiler analyzes expressions involving constants and replaces them\nwith their computed results. This process allows the compiler to transform arithmetic operations, comparisons, and\nlogical expressions into simplified forms, removing unnecessary runtime computations. By eliminating these computations,\nthe optimized program benefits from reduced execution time and improved overall performance.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"object-shapes-hidden-classes\">Object Shapes (Hidden classes)<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#object-shapes-hidden-classes\" class=\"hash-link\" aria-label=\"Direct link to Object Shapes (Hidden classes)\" title=\"Direct link to Object Shapes (Hidden classes)\">​</a></h4>\n<p>Hidden Classes (called \"Shapes\" internally to avoid confusion with JavaScript classes) are an alternative way to\nstructure objects that stores the property keys (string or symbol) (i.e. <code>object.propertyName</code>) and its attributes\n(writable, enumerable, configurable) as transitions from a root shape, and the values as a dense array. This is\ndifferent from the traditional way of storing properties as a hashmap from property keys to values.</p>\n<p>The shapes create a transition tree, where the transitions are property names and prototype changes starting from a root\nshape (no properties, no prototype).</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> o </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Shape 1: prototype `Object.prototype` and properties: empty</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">o</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">a</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">10</span><span class=\"token plain\">   </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Shape 2: prototype `Object.prototype` and properties: 'a'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">o</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">b</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">20</span><span class=\"token plain\">   </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Shape 3: prototype `Object.prototype` and properties: 'a', 'b'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> o2 </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"> </span><span class=\"token literal-property property\" style=\"color:#36acaa\">a</span><span class=\"token operator\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">30</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Shape 2: prototype `Object.prototype` and properties: 'a'</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">o2</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">d</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">50</span><span class=\"token plain\">           </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Shape 4: prototype `Object.prototype` and properties: 'a', 'd' -- fork from shape 2</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>This separation of property keys and values allows for objects with the same property names to share the same shape,\nwhich reduces memory consumption and unlocks the possibility for other optimizations such as inline caching.</p>\n<p>Note: When creating objects with the same property keys, it's best to create them in the same order, this ensures that\nthe objects share the same shape.</p>\n<p>For a more in depth explanation of how shared shapes work in boa see <code>shapes.md</code>\n<a href=\"https://github.com/boa-dev/boa/blob/v0.17/docs/shapes.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"debug-object\">Debug object<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#debug-object\" class=\"hash-link\" aria-label=\"Direct link to Debug object\" title=\"Direct link to Debug object\">​</a></h3>\n<p>The <code>$boa</code> debug object has been implemented for convenient JavaScript debugging using Boa's CLI interface. If you want\nto use it, you will need to run the Boa CLI / REPL with the <code>--debug-object</code> command line flag.</p>\n<p>The <code>$boa</code> debug object is divided into modules, so that you can trigger the garbage collection with <code>$boa.gc.collect()</code>,\nor get the bytecode of a function by running <code>$boa.function.bytecode(fn_name)</code>. You can also trace function invocations,\nhandle compiler optimizations, set runtime limits and inspect object shapes.</p>\n<p>You can find all the documentation <a href=\"https://github.com/boa-dev/boa/blob/v0.17/docs/boa_object.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-apis\">New APIs<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#new-apis\" class=\"hash-link\" aria-label=\"Direct link to New APIs\" title=\"Direct link to New APIs\">​</a></h3>\n<p>We have added new built-in object wrappers, such as <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/struct.JsPromise.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsPromise</code></a>, <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/struct.JsRegExp.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsRegExp</code></a>,\n<a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/struct.JsGenerator.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsGenerator</code></a>, <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/struct.JsDate.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsDate</code></a> and <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/struct.JsDataView.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsDataView</code></a>. You can check all of them\n<a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/object/builtins/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>We also want to present you a new trait that we have developed to make it easier for you to interoperate between Rust\nand JavaScript: <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/value/trait.TryFromJs.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>TryFromJs</code></a>. All built-ins and Rust basic types that exist in JavaScript implement this\ntrait, and it adds a new static method to them that allows you to convert a [<code>JsValue</code>][js_value] into a Rust structure.\nYou can also convert any <code>JsValue</code> to a <code>TryFromJs</code> Rust type with <a href=\"https://docs.rs/boa_engine/0.17.0/boa_engine/enum.JsValue.html#method.try_js_into\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsValue::try_js_into()</code></a> function.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_str </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">r#\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">let x = /[a-z0-9]@[a-z0-9]/;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">x;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">\"#</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js_str</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> res </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> rs_regexp</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsRegExp</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> res</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">try_js_into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> test_result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> rs_regexp</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"hello@domain\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">test_result</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Moreover, you can derive <code>TryFromJs</code> for any Rust structure, and in the case that you want to manually convert some of\nthe struct attributes, you can override it:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Converts the value lossly.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">lossy_conversion</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">value</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> _context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">match</span><span class=\"token plain\"> value </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Rational</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">r</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">r</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">round</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\">i </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        _ </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">Err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsNativeError</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">typ</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">with_message</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"cannot convert value to an i16\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[derive(Debug, TryFromJs)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">struct</span><span class=\"token plain\"> </span><span class=\"token type-definition class-name\">TestStruct</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    inner</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">bool</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    hello</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token class-name\">String</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// You can override the conversion of an attribute.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[boa(from_js_with = </span><span class=\"token attribute attr-name string\" style=\"color:#e3116c\">\"lossy_conversion\"</span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    my_float</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_str </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">r#\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">let x = {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    inner: false,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    hello: \"World\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    my_float: 2.9,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">};</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">x;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">\"#</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_bytes</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js_str</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">str</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">TestStruct</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">try_from_js</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">result</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"{str:?}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"source-api\">Source API<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#source-api\" class=\"hash-link\" aria-label=\"Direct link to Source API\" title=\"Direct link to Source API\">​</a></h4>\n<p>We have introduced a new <code>Source API</code> to Boa. The new API represents JavaScript stored from a path or <code>None</code> if it's\ncoming from a plain string.</p>\n<p>This change improves the display of <code>boa_tester</code> to show the path of the tests being run. It also enables hyperlinks to\ndirectly jump to the tested file from the VS terminal. This will further help with error displays and debugging in the\nfuture.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_file_path </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"./scripts/helloworld.js\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">match</span><span class=\"token plain\"> </span><span class=\"token class-name\">Source</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_filepath</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js_file_path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">...</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>See Boa's <a href=\"https://github.com/boa-dev/boa/tree/v0.17/boa_examples/src/bin\" target=\"_blank\" rel=\"noopener noreferrer\">examples</a> for more examples on how its used.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"hooks-and-job-queues\">Hooks and Job Queues<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#hooks-and-job-queues\" class=\"hash-link\" aria-label=\"Direct link to Hooks and Job Queues\" title=\"Direct link to Hooks and Job Queues\">​</a></h4>\n<p>In this release we have added <code>HostHooks</code> and <code>JobQueue</code> traits to <code>Context</code>. This will allow hosts to implement custom\nevent loops and other host specific functionality. This makes Boa more configurable for users and any future runtimes\nwhich need to add a more complex event loop, such as Tokio or Mio.</p>\n<p>As a result of this change, Boa's CLI will run all jobs until the queue is empty, even if a Job returns an <code>Err</code>.`</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-builtins\">New Builtins<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#new-builtins\" class=\"hash-link\" aria-label=\"Direct link to New Builtins\" title=\"Direct link to New Builtins\">​</a></h3>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"intl\"><code>Intl</code><a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#intl\" class=\"hash-link\" aria-label=\"Direct link to intl\" title=\"Direct link to intl\">​</a></h4>\n<p>Boa now has internationalization support! Although we are still working on full compliance with the\n<a href=\"https://tc39.es/ecma402/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>ecma402</code> specification</a>, we have a couple of <code>Intl</code> utilities in place:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.Collator</code></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.ListFormat</code></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.Locale</code></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Intl.Segmenter</code></a></li>\n</ul>\n<p>Internationalization data can be pretty expensive at times: the default data included by Boa is 10.6 MB, which is why\nwe allow customizing the data provider used by the engine with the <a href=\"https://boajs.dev/boa/doc/boa_engine/context/struct.ContextBuilder.html#method.icu_provider\" target=\"_blank\" rel=\"noopener noreferrer\"><code>ContextBuilder::icu_provider</code></a> hook.\nFor more information on how to generate custom internationalization data, you can check out the\n<a href=\"https://github.com/unicode-org/icu4x/blob/main/docs/tutorials/data_management.md#data-management-in-icu4x\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>data management tutorial</strong></a> from <a href=\"https://github.com/unicode-org/icu4x\" target=\"_blank\" rel=\"noopener noreferrer\"><code>icu4x</code></a>, the internationalization library used in Boa. Shoutout to the\n<code>icu4x</code> team, who are the ones that made all of this possible!</p>\n<p>Additionally, we added an <code>intl</code> feature flag, which is enabled by default but can be disabled to reduce Boa's binary\nsize.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"weakref-weakset-and-weakmap\"><code>WeakRef</code>, <code>WeakSet</code> and <code>WeakMap</code><a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#weakref-weakset-and-weakmap\" class=\"hash-link\" aria-label=\"Direct link to weakref-weakset-and-weakmap\" title=\"Direct link to weakref-weakset-and-weakmap\">​</a></h4>\n<p>We've implemented support for weak references to garbage collected objects. This allowed us to implement some builtins\nlike <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef/WeakRef\" target=\"_blank\" rel=\"noopener noreferrer\"><code>WeakRef</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\" target=\"_blank\" rel=\"noopener noreferrer\"><code>WeakSet</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" target=\"_blank\" rel=\"noopener noreferrer\"><code>WeakMap</code></a>. However, garbage collectors are unpredictable! A garbage\ncollector could collect at unexpected moments, extend the lifetime of unreachable objects and even leak, which is why\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef#avoid_where_possible\" target=\"_blank\" rel=\"noopener noreferrer\">mozilla recommends avoiding using those builtins where possible</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"fuzzing\">Fuzzing<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#fuzzing\" class=\"hash-link\" aria-label=\"Direct link to Fuzzing\" title=\"Direct link to Fuzzing\">​</a></h3>\n<p>This release of Boa contains new functionalities in the <code>boa_ast</code> crate to support grammar aware fuzzing. The visitor\npattern that is implemented for the AST makes it easy to traverse the AST and either collect information or apply\nmodifications. In addition to the fuzzer, we also use the visitor pattern in multiple syntax directed operations. The\nAST now implements the <code>Arbitrary</code> trait from the <a href=\"https://docs.rs/arbitrary/latest/arbitrary/\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Arbitrary</code></a> crate to generate inputs for fuzzers. Based\non these features we currently have three fuzzers targeting the parser, bytecompiler and vm. The fuzzers have already\nhelped us finding multiple panics that we previously had no tests for.</p>\n<p>We want to extend a huge thanks to <a href=\"https://github.com/addisoncrump\" target=\"_blank\" rel=\"noopener noreferrer\">@addisoncrump</a> as they have contributed not only\nthe fuzzers but also the visitor pattern implementation and the additional bits needed to successfully fuzz Boa.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-crates\">New Crates<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#new-crates\" class=\"hash-link\" aria-label=\"Direct link to New Crates\" title=\"Direct link to New Crates\">​</a></h3>\n<p>This release of Boa will also mark the release of some new boa crates that contain various aspects of Boa's ECMAScript\nimplementation.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa_parser\">boa_parser<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#boa_parser\" class=\"hash-link\" aria-label=\"Direct link to boa_parser\" title=\"Direct link to boa_parser\">​</a></h4>\n<p>Boa's <code>boa_parser</code> crate contains a lexer and parser that targets the latest ECMAScript language specification.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa_ast\">boa_ast<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#boa_ast\" class=\"hash-link\" aria-label=\"Direct link to boa_ast\" title=\"Direct link to boa_ast\">​</a></h4>\n<p>Boa's <code>boa_ast</code> crate contains an ECMAScript abstract syntax tree implementation of Declaration, Statement, and\nExpression Parse Nodes.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa_runtime\">boa_runtime<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#boa_runtime\" class=\"hash-link\" aria-label=\"Direct link to boa_runtime\" title=\"Direct link to boa_runtime\">​</a></h4>\n<p>Boa's <code>boa_runtime</code> crate contains an example runtime along with basic runtime features and functionality for runtime\nimplementors. Note: this crate will contain any WEB API feature implementations or APIs that are not designated by the\nECMAScript specification.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"other-internal-enhancements\">Other internal enhancements<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#other-internal-enhancements\" class=\"hash-link\" aria-label=\"Direct link to Other internal enhancements\" title=\"Direct link to Other internal enhancements\">​</a></h3>\n<p>There have also been a various number of other internal enhancements made.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"split-node-into-statement--declaration--expression\">Split Node into Statement / Declaration / Expression<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#split-node-into-statement--declaration--expression\" class=\"hash-link\" aria-label=\"Direct link to Split Node into Statement / Declaration / Expression\" title=\"Direct link to Split Node into Statement / Declaration / Expression\">​</a></h4>\n<p>In the last release, Boa's AST used a <code>Node</code> enum to represent both the <code>Statement</code>, <code>Declaration</code> and <code>Expression</code>\nparse nodes. One of the large internal improvements made for this release was to split <code>Node</code> into <code>Statement</code>,\n<code>Declaration</code>, and <code>Expression</code> nodes. This refactor involved not only large changes to the AST but also further changes\nto the bytecompiler and parser. The split also brings us closer in line with the ECMAScript specification.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"utf-16-strings\">UTF-16 strings<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#utf-16-strings\" class=\"hash-link\" aria-label=\"Direct link to UTF-16 strings\" title=\"Direct link to UTF-16 strings\">​</a></h4>\n<p>With this release, Boa's <code>JsString</code>s are now implemented as utf-16 encoded strings. Along with the new <code>JsString</code>, there\nare two provided macros: <code>js_string!</code> for creating a new <code>JsString</code> from a <code>&amp;str</code>, and <code>utf16!</code> for creating a utf-16\narray literal from a <code>&amp;str</code>.</p>\n<p>You can create a utf-16 array literal from any utf-8 <code>str</code>.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">HELLO</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token keyword\" style=\"color:#00009f\">u16</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">utf16!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hi! :)\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>You can create a <code>JsString</code> from a string literal with the <code>js_string</code> macro.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> hw </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello, world!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">hw</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">utf16!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello, world!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>You can also pass any number of <code>&amp;[u16]</code> string values as arguments to create a new <code>JsString</code>.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">NAME</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token keyword\" style=\"color:#00009f\">u16</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">  </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">utf16!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"human! \"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> greeting </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello, \"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> msg </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">js_string!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">greeting</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token constant\" style=\"color:#36acaa\">NAME</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">utf16!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Nice to meet you!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">msg</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token macro property\" style=\"color:#36acaa\">utf16!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello, human! Nice to meet you!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conclusions\">Conclusions<a href=\"https://boajs.dev/blog/2023/07/08/boa-release-17#conclusions\" class=\"hash-link\" aria-label=\"Direct link to Conclusions\" title=\"Direct link to Conclusions\">​</a></h2>\n<p>If you reached so far, you probably understand how big this release was, and you can find even more changes in the\n<a href=\"https://github.com/boa-dev/boa/blob/v0.17/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">full changelog</a>. Boa is now becoming a real option for many projects, which shows with the amount of\nfinancial support we have received these last months. Nevertheless, going forward, we need your help to get to a 1.0\nversion. Whether you are good with Rust, JavaScript, documentation or development, we have multiple\n<a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">good first issues</a>, and places where we <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\" target=\"_blank\" rel=\"noopener noreferrer\">need help</a>, both in Boa's\n<a href=\"https://github.com/boa-dev/boa\" target=\"_blank\" rel=\"noopener noreferrer\">main repository</a> and <a href=\"https://github.com/boa-dev\" target=\"_blank\" rel=\"noopener noreferrer\">others</a> around it.</p>\n<p>Once again, big thanks to <a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2022-10-24&amp;to=2023-07-05&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">all the contributors</a> of this release!!</p>",
            "url": "https://boajs.dev/blog/2023/07/08/boa-release-17",
            "title": "Boa release v0.17",
            "summary": "Summary",
            "date_modified": "2023-07-08T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2022/10/24/boa-usage",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"introduction\">Introduction<a href=\"https://boajs.dev/blog/2022/10/24/boa-usage#introduction\" class=\"hash-link\" aria-label=\"Direct link to Introduction\" title=\"Direct link to Introduction\">​</a></h2>\n<p>When we develop tools for our users, we sometimes want to give them some form of control over how\nthey work. This is common in games, where we can add scripting for our users to be able to create\nextensions, or even for business tools, where we allow our customer to change or extend the\nbehaviour of our platform. For those cases, using Rust, a compiled, type safe language can be a\nchallenge, since once a program has been compiled, it's tricky to change or extend it at runtime.\nFurthermore, many of our users will prefer to use a more common scripting language, such as\nJavaScript.</p>\n<p>This is where Boa enters the scene. Boa is a Javascript engine fully written in Rust. Currently, it\ncan be used in places where you need most of the JavaScript language to work, even though, we would\nadvise to wait to get all our <a href=\"https://github.com/boa-dev/boa/issues?q=64+162+718+773+2068+1930+1922+1917+1900+1848+1805+1570+1402+1307+1180+is%3Aopen\" target=\"_blank\" rel=\"noopener noreferrer\">known blocker bugs</a> solved before using this for critical\nworkloads. You can check how conformant we are with the official ECMAScript specification\n<a href=\"https://boa-dev.github.io/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>And, before going further, we would like to mention that you can contribute to Boa by solving one\nof the <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22%2CHacktoberfest%2CE-Easy%2C%22good+first+issue%22+no%3Aassignee\" target=\"_blank\" rel=\"noopener noreferrer\">issues</a> where we need special help, and we now also accept financial contributions\nin <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">our OpenCollective</a> page.</p>\n<p><em>Note: You can see more examples of integrating Boa in <a href=\"https://github.com/boa-dev/boa/tree/main/boa_examples\" target=\"_blank\" rel=\"noopener noreferrer\">our repository</a>.</em></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"starting-from-scratch\">Starting from scratch<a href=\"https://boajs.dev/blog/2022/10/24/boa-usage#starting-from-scratch\" class=\"hash-link\" aria-label=\"Direct link to Starting from scratch\" title=\"Direct link to Starting from scratch\">​</a></h2>\n<p>Let's start a new project running <code>cargo new my_project</code>, and then add <a href=\"https://crates.io/crates/boa_engine\" target=\"_blank\" rel=\"noopener noreferrer\"><code>boa_engine</code></a> as one\nof our dependencies by running <code>cargo add boa_engine -F console</code> in our newly created <code>my_project</code>\ndirectory.</p>\n<p>Let's start by adding the minimal code needed to get a JavaScript interpreter working in our\n<code>src/main.rs</code> file:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_code </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"console.log('Hello World from a JS code string!')\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Instantiate the execution context</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Parse the source code</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">match</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js_code</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">res</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"{}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> res</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">e</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Pretty print the error</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token macro property\" style=\"color:#36acaa\">eprintln!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Uncaught {}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">display</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>As you can see in this example, when working with Boa, you will have to use a <a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context</code></a>,\nwhich will be in charge of initializing all the internals and built-in objects (such as <code>Date</code>,\n<code>Promise</code> and so on). The <code>Context</code> in Boa is also your go-to place for configuring your interpreter\nas you wish. You can add custom global functions, objects, and anything you might imagine. It's also\none of the arguments you will receive if you create a Rust function and expose it to JavaScript, and\nwith it, you will be able to throw errors, modify the global object and return values to JavaScript.</p>\n<p>Talking about values, Boa comes with its built-in <a href=\"https://docs.rs/boa_engine/latest/boa_engine/enum.JsValue.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsValue</code></a> type. This enumeration\nrepresents any JavaScript value that can, for example, be assigned to a variable. And, before you\nask, you can convert it to and from a <a href=\"https://docs.rs/serde_json/latest/serde_json/value/enum.Value.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>serde_json::Value</code></a>, of course, by using the\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/enum.JsValue.html#method.from_json\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsValue::from_json()</code></a> and <a href=\"https://docs.rs/boa_engine/latest/boa_engine/enum.JsValue.html#method.to_json\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsValue::to_json()</code></a> methods.</p>\n<p>As you can see in those methods, or in the <code>Context::eval()</code> that we used earlier, you will\nreceive a <code>JsResult</code> as a response. This result type will contain a <code>JsValue</code> as its error variant,\nwhich means you can return the error back to JavaScript for it to handle it. A <code>JsValue</code>, internally,\nis a garbage-collected JavaScript value. But, isn't Rust one of the few non-garbage collected\nlanguages? Wasn't that a good thing?</p>\n<p>The answer is <em>yes, of course</em>, but JavaScript requires a garbage collector. This garbage collector\nmakes sure that all values are freed when they are no longer needed. It also makes a <code>JsValue</code>\nextremely cheap to clone, independently of its contents.</p>\n<p>If you run this example code with <code>cargo run</code>, you will notice that it will print the message sent\nto <code>console.log()</code>, and it will also print <code>undefined</code> at the end. This last <code>undefined</code> is part of\nthe <code>Ok(res)</code> branch in the <code>match</code>, which prints the result of the execution. In this case, the\nresult of the execution is the result of the last statement, which is the <code>console.log()</code>, and this\nstatement returns <code>undefined</code>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"but-what-can-you-do-with-boa\">But, what can you do with Boa?<a href=\"https://boajs.dev/blog/2022/10/24/boa-usage#but-what-can-you-do-with-boa\" class=\"hash-link\" aria-label=\"Direct link to But, what can you do with Boa?\" title=\"Direct link to But, what can you do with Boa?\">​</a></h2>\n<p>Let's start with the basics. Of course, you can execute JavaScript code. This code can be any\nstring or directly a byte vector (so you can load files and use them directly). You can use\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.eval\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::eval()</code></a> in both cases, as you saw before, and you can also use\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.parse\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::parse()</code></a>, which will give you a <a href=\"https://docs.rs/boa_engine/latest/boa_engine/syntax/ast/node/statement_list/struct.StatementList.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>StatementList</code></a> that\nyou can use multiple times in <a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.compile\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::compile()</code></a>, so that you don't need to\nparse the same code more than once. The compiled source code can also be executed multiple times,\nsince it's <a href=\"https://docs.rs/boa_engine/latest/boa_engine/vm/struct.CodeBlock.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>CodeBlock</code></a> is garbage collected, and therefore it can be cheaply cloned.\nIn order to execute a code block you will need to use <a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.execute\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::execute()</code></a>.</p>\n<p>This in itself is good enough to provide a simple scripting API for your project, but where Boa\nreally shines is in the ability to inter-operate Rust and JavaScript. Let's start with a simple\nexample: exposing a Rust function to JavaScript. A JavaScript-compatible Rust function must have\nthe <a href=\"https://docs.rs/boa_engine/latest/boa_engine/builtins/function/type.NativeFunctionSignature.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>NativeFunctionSignature</code></a> signature:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token namespace\" style=\"opacity:0.7\">builtins</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">JsArgs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Says \"hello\" using the first argument.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">_this</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">JsValue</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> name </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">is_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello World!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">else</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello {}!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The <a href=\"https://docs.rs/boa_engine/latest/boa_engine/builtins/trait.JsArgs.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsArgs</code></a> trait allows you to retrieve a value if the function received it, or set it\nto the <code>undefined</code> value, if not. Then, in this case, it will convert the name to a <code>JsString</code>\nbefore printing it, since we might be receiving an object, a symbol, a boolean... one of the perks\nof dynamic typing. This will then print the result in th standard output using the common\n<code>println!()</code> macro in Rust. It will just return an undefined value.</p>\n<p>You can register this function in the context by adding this line after the context creation (and\nbefore executing any JS) in the <code>main()</code> function:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_builtin_function</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"say_hello\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>This will register it as a global function, with the <code>say_hello()</code> name, and with a <code>length</code> of 1\n(which indicates the number of arguments that it receives by default). You can then try it out by\nmodifying the JavaScript string:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_code </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">r#\"say_hello(\"Rust\");\"#</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The <code>r#\"...\"#</code> syntax is a Rust raw <a href=\"https://doc.rust-lang.org/rust-by-example/std/str.html#literals-and-escapes\" target=\"_blank\" rel=\"noopener noreferrer\">string literal</a>.</p>\n<p>You can also add any <code>JsValue</code> as a property to the global object by using the\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.register_global_property\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::register_global_property()</code></a> function:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token namespace\" style=\"opacity:0.7\">property</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">Attribute</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_property</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MY_PROJECT_VERSION\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1.0.0\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Attribute</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">all</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>And you can use it in JavaScript:</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token constant\" style=\"color:#36acaa\">MY_PROJECT_VERSION</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>The <a href=\"https://docs.rs/boa_engine/latest/boa_engine/property/struct.Attribute.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Attribute</code></a> of a property indicates if it will be writable (it can be set and\nmodified), enumerable (it can be used in <code>for..in</code> statements) and configurable (its attributes or\ntype of property can be modified).</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"integrating-a-full-rust-data-structure\">Integrating a full Rust data structure<a href=\"https://boajs.dev/blog/2022/10/24/boa-usage#integrating-a-full-rust-data-structure\" class=\"hash-link\" aria-label=\"Direct link to Integrating a full Rust data structure\" title=\"Direct link to Integrating a full Rust data structure\">​</a></h2>\n<p>Sometimes, adding a function or a single <code>JsValue</code> to the global scope of your JavaScript context\nis not enough, and you want to enable the full power of Rust with its structures to handle more\ncomplex scenarios. This can be achieved using the <a href=\"https://docs.rs/boa_engine/latest/boa_engine/class/trait.Class.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Class</code></a> trait. This has to be combined\nwith two other traits, that make any Rust object be garbage-collected: <a href=\"https://docs.rs/boa_gc/latest/boa_gc/trait.Trace.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Trace</code></a> and\n<a href=\"https://docs.rs/boa_gc/0.16.0/boa_gc/trait.Finalize.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Finalize</code></a>, in the <a href=\"https://crates.io/crates/boa_gc\" target=\"_blank\" rel=\"noopener noreferrer\"><code>boa_gc</code></a> crate. Luckily those two traits can be derived.</p>\n<p>Let's start by implementing a <code>Person</code> type, that will showcase the potential of this API. Let's\nrun <code>cargo add gc boa_gc</code> and add some code:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_gc</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token class-name\">Finalize</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Trace</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[derive(Debug, Trace, Finalize)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">struct</span><span class=\"token plain\"> </span><span class=\"token type-definition class-name\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// The name of the person.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token class-name\">String</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// The age of the person.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    age</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">u8</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Then, we will move the <code>say_hello()</code> function to be a static method of <code>Person</code>:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">impl</span><span class=\"token plain\"> </span><span class=\"token class-name\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Says \"hello\" using the name and the age of a `Person`.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> _args</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">JsValue</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> this </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> this</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">as_object</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">and_then</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">obj</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> obj</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">downcast_ref</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token keyword\" style=\"color:#00009f\">Self</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">ok_or_else</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">construct_type_error</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"`this` is not a `Person` object\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Hello {}-year-old {}!\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">age</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">name</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>As you can see, this now uses the <code>this</code> parameter of the <code>say_hello()</code> function, which should be a\n<code>Person</code>, but in JavaScript you can assign methods of some objects to others, so we must make sure\nthat on this invocation, we are indeed working with a <code>Person</code>, and return a <code>TypeError</code> if not.</p>\n<p>Now, let's implement the <a href=\"https://docs.rs/boa_engine/latest/boa_engine/class/trait.Class.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Class</code></a> trait. This trait requires a <code>NAME</code> constant, which will\nbe the name of the global object property, and a <code>LENGTH</code> for the constructor (the number of\narguments, by default <code>0</code>). Then, it needs a <code>constructor()</code> function, which is a native function\nthat will be called when we do a <code>new Person()</code>, and an <code>init()</code> function, which will be called by\nthe <code>Context</code> when registering the function in the global scope. It will receive a\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/class/struct.ClassBuilder.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>ClassBuilder</code></a>, which allows you to add a method (both, static and <code>prototype</code>), a\n<code>property</code>, also for both cases, accessor properties (to use <code>get</code> and <code>set</code>) and property\ndescriptors. You can also get a reference to the <code>Context</code> with the <code>ClasBuilder::context()</code> method,\nin case you want to do anything fancier.</p>\n<p>In this case, the constructor will take care of constructing the Rust <code>Person</code> data structure with\nthe two arguments it receives, and then register the <code>say_hello()</code> method:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token namespace\" style=\"opacity:0.7\">builtins</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">JsArgs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token namespace\" style=\"opacity:0.7\">class</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">ClassBuilder</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">impl</span><span class=\"token plain\"> </span><span class=\"token class-name\">Class</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> </span><span class=\"token class-name\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">NAME</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token lifetime-annotation symbol\" style=\"color:#36acaa\">'static</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">str</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Person\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">LENGTH</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">usize</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// This is what is called when we construct a `Person` with the expression `new Person()`.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">constructor</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">_this</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token keyword\" style=\"color:#00009f\">Self</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> name </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> age </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_u32</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">..=</span><span class=\"token number\" style=\"color:#36acaa\">150</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">contains</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">age</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">throw_range_error</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token macro property\" style=\"color:#36acaa\">format!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"invalid age `{age}`. Must be between 0 and 150\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> age </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">u8</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">try_from</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">age</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">expect</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"we already checked that it was in range\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> person </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Person</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            name</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> name</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            age</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">person</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Here is where the class is initialized, to be inserted into the global object.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">init</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">class</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">ClassBuilder</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        class</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">method</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"say_hello\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">Self</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token plain\">say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>In order to register the class, you will need to use the\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/struct.Context.html#method.register_global_class\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Context::register_global_class()</code></a> method:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_class</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">expect</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"could not register class\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>You can now adapt the JavaScript code:</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> person </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Person</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"John\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">28</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">person</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">say_hello</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>If you want to access the global object from Rust, you can use <code>Context::global_object()</code>, which\nwill return a <a href=\"https://docs.rs/boa_engine/latest/boa_engine/object/struct.JsObject.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsObject</code></a>. In this object, you can use the\n<a href=\"https://docs.rs/boa_engine/latest/boa_engine/object/struct.JsObject.html#method.get\" target=\"_blank\" rel=\"noopener noreferrer\"><code>JsObject::get()</code></a> function to retrieve any property of the global object, such as\nthe <code>MY_PROJECT_VERSION</code> that you defined earlier, or any intrinsic, such as the <code>Date</code> object.</p>\n<p>We are now in the process of creating Rust wrappers for all JavaScript intrinsics (<a href=\"https://github.com/boa-dev/boa/issues/2098\" target=\"_blank\" rel=\"noopener noreferrer\">#2098</a>).\nFor example, you can create a <code>JsArray</code> from a <code>JsObject</code> to make it much easier to manipulate a\nJavaScript array from Rust. In the following example, you'll create a new <code>reverseAppend()</code> global\nfunction that will receive an array, reverse it, and then append the <em>\"My Project\"</em> string to it.\nIt will then get the <code>MY_PROJECT_VERSION</code> from the global object, and append it to the array.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token namespace\" style=\"opacity:0.7\">builtins</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">JsArgs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">object</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">JsArray</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">property</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">Attribute</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Reverses an array and appends the `\"My Project\"` string and the `MY_PROJECT_VERSION` global</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// property to it.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">reverse_append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">_this</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token class-name\">JsValue</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> arr </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> args</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get_or_undefined</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">as_object</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">ok_or_else</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">construct_type_error</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"argument must be an array\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> arr </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsArray</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">from_object</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">arr</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> reverse </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> arr</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">reverse</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    reverse</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">push</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"My Project\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> global_object </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">global_object</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> version </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> global_object</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MY_PROJECT_VERSION\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap_or_default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    reverse</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">push</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">version</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\">reverse</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">clone</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js_code </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">r#\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        let arr = ['a', 2, 5.4, \"Hello\"];</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        reverseAppend(arr);</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    \"#</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Instantiate the execution context</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_property</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"MY_PROJECT_VERSION\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"1.0.0\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Attribute</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">all</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_builtin_function</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"reverseAppend\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> reverse_append</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Parse the source code</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">match</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js_code</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">res</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"{}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> res</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">Err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">e</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Pretty print the error</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token macro property\" style=\"color:#36acaa\">eprintln!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"Uncaught {}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">display</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>We are looking for contributors to implement the rest of the wrappers, and of course, we offer mentoring!</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"whats-coming-next\">What's coming next?<a href=\"https://boajs.dev/blog/2022/10/24/boa-usage#whats-coming-next\" class=\"hash-link\" aria-label=\"Direct link to What's coming next?\" title=\"Direct link to What's coming next?\">​</a></h2>\n<p>Boa's development is ongoing non-stop. The next version, v0.17, is already looking pretty nice,\nwith some great enhancements. For example, <a href=\"https://github.com/jedel1043\" target=\"_blank\" rel=\"noopener noreferrer\">@jedel1043</a> has created new\n<a href=\"https://github.com/boa-dev/boa/pull/2283\" target=\"_blank\" rel=\"noopener noreferrer\">\"lazy\" errors</a>, that are much easier to create and throw, since they don't need a\n<code>Context</code>, and also enhance the performance. <a href=\"https://github.com/nekevss\" target=\"_blank\" rel=\"noopener noreferrer\">@nekevss</a> has implemented a\n<a href=\"https://github.com/boa-dev/boa/pull/2326\" target=\"_blank\" rel=\"noopener noreferrer\">new wrapper</a> for <code>RegExp</code>, and <a href=\"https://github.com/anuvratsingh\" target=\"_blank\" rel=\"noopener noreferrer\">@anuvratsingh</a> is working on a <code>Date</code>\n<a href=\"https://github.com/boa-dev/boa/pull/2181\" target=\"_blank\" rel=\"noopener noreferrer\">wrapper</a>. <a href=\"https://github.com/Razican\" target=\"_blank\" rel=\"noopener noreferrer\">@razican</a> is working on a JavaScript to Rust\n<a href=\"https://github.com/boa-dev/boa/pull/2276\" target=\"_blank\" rel=\"noopener noreferrer\">conversion trait</a> and derive, that will allow you to convert a <code>JsValue</code> to a Rust\nstructure and back really easily:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_derive</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">TryFromJs</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa_engine</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token namespace\" style=\"opacity:0.7\">value</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token class-name\">TryFromJs</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[derive(Debug, TryFromJs)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[allow(dead_code)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">struct</span><span class=\"token plain\"> </span><span class=\"token type-definition class-name\">TestStruct</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    inner</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">bool</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    hello</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token class-name\">String</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">#[boa(from_js_with = </span><span class=\"token attribute attr-name string\" style=\"color:#e3116c\">\"lossy_conversion\"</span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">, hello = </span><span class=\"token attribute attr-name string\" style=\"color:#e3116c\">\"myfriend\"</span><span class=\"token attribute attr-name\" style=\"color:#00a4db\">)]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    my_float</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> js </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">r#\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    let x = {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        inner: false,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        hello: \"World\",</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">        my_float: 2.9,</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    };</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    x;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token string\" style=\"color:#e3116c\">    \"#</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">default</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> res </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">js</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">str</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">TestStruct</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">try_from_js</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token plain\">res</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">map_err</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">e</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> e</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">display</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">to_string</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token macro property\" style=\"color:#36acaa\">println!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"{str:?}\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">/// Converts the value lossly</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">lossy_conversion</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">value</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">-&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">JsResult</span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token operator\" style=\"color:#393A34\">&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">match</span><span class=\"token plain\"> value </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Rational</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">r</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">r</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">round</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\">i </span><span class=\"token keyword\" style=\"color:#00009f\">as</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">i16</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        _ </span><span class=\"token operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">throw_type_error</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"cannot convert value to an i16\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>We love contributions, whether it's a documentation enhancement, fixing or implementing the\nECMAScript specification, adding new functionality / APIs or enhancing performance, we would love\nto get new contributors on board! We are also looking for financial contributors, so feel free to\njoin our <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCollective</a>.</p>",
            "url": "https://boajs.dev/blog/2022/10/24/boa-usage",
            "title": "Adding a JavaScript interpreter to your Rust project",
            "summary": "Introduction",
            "date_modified": "2022-10-24T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2022/09/25/boa-release-16",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h2>\n<p>Boa v0.16 is now available! After around 3 months of development, we are very happy to present you the newest release of\nthe Boa JavaScript engine. Boa makes it easy to embed a JS engine in your projects, and you can even use it from\nWebAssembly. See the <a href=\"https://boajs.dev/about\">about</a> page for more info.</p>\n<p>Boa currently supports part of the JavaScript language. In this release, our conformance has grown from 62.29% to 74.53%\nin the official ECMAScript Test Suite (Test262). The engine now passes 68,612 tests, coming from 56,372 in Boa 0.15\n(21.7% increase), and we have closed 9 issues and merged 59 pull requests. You can check the full list of changes\n<a href=\"https://github.com/boa-dev/boa/blob/v0.16/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, and the full information on conformance\n<a href=\"https://boa-dev.github.io/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-ecmascript-features\">New ECMAScript features<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#new-ecmascript-features\" class=\"hash-link\" aria-label=\"Direct link to New ECMAScript features\" title=\"Direct link to New ECMAScript features\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support-for-promises\">Support for Promises<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#support-for-promises\" class=\"hash-link\" aria-label=\"Direct link to Support for Promises\" title=\"Direct link to Support for Promises\">​</a></h3>\n<p>With this new release Boa ships support for ECMAScript Promises. All tests in the 262 test suite <code>built-ins/Promise</code> pass.\nPromises enable asynchronous operations to be executed via an internal job queue. Starting with our work on Promises,\nwe have stopped ignoring the 262 tests that are flagged as <code>async</code>. We also have enabled our 262 test runner to work\nwith asynchronous tests. We would like to thank <a href=\"https://github.com/aaronmunsters\" target=\"_blank\" rel=\"noopener noreferrer\">@aaronmunsters</a> for proposing\nthe initial PR for Promises (<a href=\"https://github.com/boa-dev/boa/pull/1923\" target=\"_blank\" rel=\"noopener noreferrer\">#1923</a>) that we then could expand on.</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// This program will print:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//    1. End of synchronous execution.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">//    2. The Promise has been resolved.</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> promise </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token known-class-name class-name\">Promise</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">resolve</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">promise</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">then</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token arrow operator\" style=\"color:#393A34\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"2. The Promise has been resolved.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"1. End of synchronous execution.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support-for-asyncawait\">Support for Async/Await<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#support-for-asyncawait\" class=\"hash-link\" aria-label=\"Direct link to Support for Async/Await\" title=\"Direct link to Support for Async/Await\">​</a></h3>\n<p>The implementation of Promises has enabled us to implement async functions and the await keyword. The async/await syntax\nmakes it easier to use Promises within javascript. We have implemented async functions, async generators,\n<code>for await...of</code> loops and the <code>await</code> keyword. While not all tests pass for these features yet, the basic functionality\nshould work.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"densepacked-javascript-arrays\">Dense/Packed JavaScript Arrays<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#densepacked-javascript-arrays\" class=\"hash-link\" aria-label=\"Direct link to Dense/Packed JavaScript Arrays\" title=\"Direct link to Dense/Packed JavaScript Arrays\">​</a></h2>\n<p>JavaScript Arrays are regular objects whose values are stored as indexed properties. Because arrays have no fixed\nlength, values can be assigned to any possible index without any of the previous indices being used. Due to this\nbehavior indexed properties are stored in a map instead of in a vector, as the vector would allocate a lot of unused\nmemory if a high index is used. We have implemented an optimization to make it possible to use optimized vector storage\nfor array values, as long as indices are not assigned out of order. This has improved the performance of arrays around\n<strong>45%</strong> for arrays without empty slots. To learn more about this optimization take a look at the PR\n<a href=\"https://github.com/boa-dev/boa/pull/2167\" target=\"_blank\" rel=\"noopener noreferrer\">#2167</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support-for-uri-encoding-and-decoding-functions\">Support for URI encoding and decoding functions<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#support-for-uri-encoding-and-decoding-functions\" class=\"hash-link\" aria-label=\"Direct link to Support for URI encoding and decoding functions\" title=\"Direct link to Support for URI encoding and decoding functions\">​</a></h2>\n<p>This version for Boa ships with support for the built-in URI encoding and decoding functions <code>encodeURI</code>, <code>decodeURI</code>,\n<code>encodeURIComponent</code> and <code>decodeURIComponent</code>. With the exception of UTF-16 related test, all test in the relevant 262\ntest suites pass for these functions.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-can-you-contribute-to-boa\">How can you contribute to Boa?<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#how-can-you-contribute-to-boa\" class=\"hash-link\" aria-label=\"Direct link to How can you contribute to Boa?\" title=\"Direct link to How can you contribute to Boa?\">​</a></h2>\n<p>In March, Boa opened financial contributions on its <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCollective page</a>.\nIf financial contribution is not your strength, you can contribute by asking to be assigned to one of our\n<a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+no%3Aassignee\" target=\"_blank\" rel=\"noopener noreferrer\">open issues</a>, and asking for mentoring if you\ndon't know your way around the engine. Our <a href=\"https://github.com/boa-dev/boa/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">contribution guide</a>\nshould help you here. If you are more used to working with JavaScript or frontend web development, we also\nwelcome help to improve our web presence, either in <a href=\"https://github.com/boa-dev/boa-dev.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">our website</a>, or in\nour <a href=\"https://github.com/boa-dev/boa/issues/820\" target=\"_blank\" rel=\"noopener noreferrer\">testing representation</a> page or benchmarks page. You can also contribute to\nour Criterion benchmark comparison GitHub <a href=\"https://github.com/boa-dev/criterion-compare-action\" target=\"_blank\" rel=\"noopener noreferrer\">action</a>.</p>\n<p>We are also looking to improve the documentation of the engine, both for developers of the engine itself and for users of the\nengine. Feel free to contact us in <a href=\"https://discord.gg/tUFFk9Y\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2022/09/25/boa-release-16#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h3>\n<p>Last but certainly not least, a big <strong>Thank You</strong> to\n<a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2022-06-11&amp;to=2022-09-25&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">all the contributors</a>\nof this Boa release. We would like to particularly thank our new contributors:</p>\n<ul>\n<li><a href=\"https://github.com/CYBAI\" target=\"_blank\" rel=\"noopener noreferrer\">@CYBAI</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2108\" target=\"_blank\" rel=\"noopener noreferrer\">#2108</a></li>\n<li><a href=\"https://github.com/udhaykumarbala\" target=\"_blank\" rel=\"noopener noreferrer\">@udhaykumarbala</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2245\" target=\"_blank\" rel=\"noopener noreferrer\">#2245</a></li>\n<li><a href=\"https://github.com/tunz\" target=\"_blank\" rel=\"noopener noreferrer\">@tunz</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2261\" target=\"_blank\" rel=\"noopener noreferrer\">#2261</a></li>\n<li><a href=\"https://github.com/anuvratsingh\" target=\"_blank\" rel=\"noopener noreferrer\">@anuvratsingh</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2162\" target=\"_blank\" rel=\"noopener noreferrer\">#2162</a></li>\n<li><a href=\"https://github.com/creampnx-x\" target=\"_blank\" rel=\"noopener noreferrer\">@creampnx-x</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2274\" target=\"_blank\" rel=\"noopener noreferrer\">#2274</a></li>\n</ul>",
            "url": "https://boajs.dev/blog/2022/09/25/boa-release-16",
            "title": "Boa release v0.16",
            "summary": "Summary",
            "date_modified": "2022-09-25T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2022/06/10/boa-release-15",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h2>\n<p>Boa v0.15 is now available! After around 3 months of development, we are very happy to present you the newest release of the\nBoa JavaScript engine. Boa makes it easy to embed a JS engine in your projects, and you can even use it from WebAssembly. See\nthe <a href=\"https://boajs.dev/about\">about</a> page for more info.</p>\n<p>Boa currently supports part of the JavaScript language. In this release, our conformance has grown from 49.74% to 62.29%\nin the official ECMAScript Test Suite (Test262). The engine now passes 56,372 tests, coming from 43,986 in Boa 0.14\n(28.1% increase), and we have closed 18 issues and merged 58 pull requests. You can check the full list of changes\n<a href=\"https://github.com/boa-dev/boa/blob/v0.15/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, and the full information on conformance\n<a href=\"https://boa-dev.github.io/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-ecmascript-features\">New ECMAScript features<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#new-ecmascript-features\" class=\"hash-link\" aria-label=\"Direct link to New ECMAScript features\" title=\"Direct link to New ECMAScript features\">​</a></h2>\n<p>While there are only a few big new features in this release, there are a lot of fixes for existing features that should enable\nmany more JavaScript programs to execute correctly. For a detailed list checkout the\n<a href=\"https://github.com/boa-dev/boa/blob/v0.15/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">changelog</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support-for-classes\">Support for Classes<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#support-for-classes\" class=\"hash-link\" aria-label=\"Direct link to Support for Classes\" title=\"Direct link to Support for Classes\">​</a></h3>\n<p>With this new release boa ships with support for ECMAScript Classes. While not all features are implemented, most basic\nfunctionality should work as expected.</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">class</span><span class=\"token plain\"> </span><span class=\"token class-name\">Rectangle</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">constructor</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token parameter\">height</span><span class=\"token parameter punctuation\" style=\"color:#393A34\">,</span><span class=\"token parameter\"> width</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">height</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> height</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">width</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> width</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token function\" style=\"color:#d73a49\">calcArea</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">height</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">width</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:#00009f\">get</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">area</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword control-flow\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">this</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">calcArea</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> r </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Rectangle</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">4</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">r</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">calcArea</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 8</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"support-for-eval-and-function\">Support for <code>eval()</code> and <code>Function()</code><a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#support-for-eval-and-function\" class=\"hash-link\" aria-label=\"Direct link to support-for-eval-and-function\" title=\"Direct link to support-for-eval-and-function\">​</a></h3>\n<p>While <code>eval()</code> is one of the less popular Javascript features, many tests in the ECMAScript Test Suite use it. For a\nbetter representation of passing tests and to fully comply with the specification we have implemented it and the similar\n<code>Function()</code> constructor. We would like to echo the mdn docs and point out to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!\" target=\"_blank\" rel=\"noopener noreferrer\">Never use eval()!</a></p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">'console.log(\"Never use eval()!\")'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> f </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token known-class-name class-name\">Function</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"arg\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'console.log(\"This is also a very \" + arg + \" idea!\")'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:#d73a49\">f</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"bad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Thanks to <a href=\"https://github.com/raskad\" target=\"_blank\" rel=\"noopener noreferrer\">@raskad</a> for working on classes, <code>eval()</code> and <code>Function()</code>, among many other things!</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"regaining-performance\">Regaining Performance<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#regaining-performance\" class=\"hash-link\" aria-label=\"Direct link to Regaining Performance\" title=\"Direct link to Regaining Performance\">​</a></h2>\n<p>After moving from an AST based execution to our Virtual Machine we observed performance losses in some of our benchmarks. We\nfound out that the root-cause of these losses was a single <code>format!()</code> call in the hot-path of the VM. Our assumption was that\nthe formatting logic would be optimized out by rustc or llvm, because it was used as an argument to an empty (feature-gated)\nfunction. After replacing the <code>format!()</code> call with a <code>&amp;'static str</code> the expected optimization took place and we were back to\nprevious performance levels. For more details check out <a href=\"https://github.com/boa-dev/boa/pull/1973\" target=\"_blank\" rel=\"noopener noreferrer\">#1973</a> for the changes and\nsome discussion about this issue. Thanks to <a href=\"https://github.com/pdogr\" target=\"_blank\" rel=\"noopener noreferrer\">@pdogr</a> for finding the issue and contributing a fix.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"starting-work-on-internationalization\">Starting work on Internationalization<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#starting-work-on-internationalization\" class=\"hash-link\" aria-label=\"Direct link to Starting work on Internationalization\" title=\"Direct link to Starting work on Internationalization\">​</a></h2>\n<p>ECMAScript specifies an Internationalization API through the <code>Intl</code> global object. We have started implementing many internal\nfunctions and structures to provide the <code>Intl</code> object in boa. To take advantage of existing work in this space we have started\nintegrating the <a href=\"https://github.com/unicode-org/icu4x\" target=\"_blank\" rel=\"noopener noreferrer\">ICU4X library</a> into boa. Thanks to\n<a href=\"https://github.com/NorbertGarfield\" target=\"_blank\" rel=\"noopener noreferrer\">@NorbertGarfield</a> and <a href=\"https://github.com/jedel1043\" target=\"_blank\" rel=\"noopener noreferrer\">@jedel1043</a> for their continued work\non this topic.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"rust-wrappers-for-javascript-objects\">Rust Wrappers for Javascript Objects<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#rust-wrappers-for-javascript-objects\" class=\"hash-link\" aria-label=\"Direct link to Rust Wrappers for Javascript Objects\" title=\"Direct link to Rust Wrappers for Javascript Objects\">​</a></h2>\n<p>We have started the implementation of wrappers around built-in Javascript objects like <code>Array</code>. These Rust types make it easy\nto work with Javascript objects in Rust and provide a type safe abstraction around them. Many of these wrappers are not\nimplemented yet and may be a good place to start contributing to boa. If you are interested, check out the\n<a href=\"https://github.com/boa-dev/boa/issues/2098\" target=\"_blank\" rel=\"noopener noreferrer\">tracking issue</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"how-can-you-contribute-to-boa\">How can you contribute to Boa?<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#how-can-you-contribute-to-boa\" class=\"hash-link\" aria-label=\"Direct link to How can you contribute to Boa?\" title=\"Direct link to How can you contribute to Boa?\">​</a></h2>\n<p>In March, boa opened financial contributions on its <a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCollective page</a>. Since then, we have\nto thank Demergent Labs, a company using Boa in the Internet Computer that has decided to sponsor us, and Clemens\nKoza, who is our first backer! We are already thinking on how we will use these contributions to improve how we develop Boa.</p>\n<p>If financial contribution is not your strength, you can contribute by asking to be assigned to one of our\n<a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+no%3Aassignee\" target=\"_blank\" rel=\"noopener noreferrer\">open issues</a>, and asking for mentoring if you\ndon't know your way around the engine. Our <a href=\"https://github.com/boa-dev/boa/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">contribution guide</a>\nshould help you here. If you are more used to working with JavaScript or frontend web development, we also\nwelcome help to improve our web presence, either in <a href=\"https://github.com/boa-dev/boa-dev.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">our website</a>, or in\nour <a href=\"https://github.com/boa-dev/boa/issues/820\" target=\"_blank\" rel=\"noopener noreferrer\">testing representation</a> page or benchmarks page. You can also contribute to\nour Criterion benchmark comparison GitHub <a href=\"https://github.com/boa-dev/criterion-compare-action\" target=\"_blank\" rel=\"noopener noreferrer\">action</a>.</p>\n<p>We are also looking to improve the documentation of the engine, both for developers of the engine itself and for users of the\nengine. Feel free to contact us in <a href=\"https://discord.gg/tUFFk9Y\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2022/06/10/boa-release-15#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h3>\n<p>Last but certainly not least, a big <strong>Thank You</strong> to\n<a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2022-03-16&amp;to=2022-06-10&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">all the contributors</a> of this Boa\nrelease. We would like to particularly thank our new contributors:</p>\n<ul>\n<li><a href=\"https://github.com/lupd\" target=\"_blank\" rel=\"noopener noreferrer\">@lupd</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1979\" target=\"_blank\" rel=\"noopener noreferrer\">#1979</a></li>\n<li><a href=\"https://github.com/NorbertGarfield\" target=\"_blank\" rel=\"noopener noreferrer\">@NorbertGarfield</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1963\" target=\"_blank\" rel=\"noopener noreferrer\">#1963</a></li>\n<li><a href=\"https://github.com/pdogr\" target=\"_blank\" rel=\"noopener noreferrer\">@pdogr</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1968\" target=\"_blank\" rel=\"noopener noreferrer\">#1968</a></li>\n<li><a href=\"https://github.com/kilotaras\" target=\"_blank\" rel=\"noopener noreferrer\">@kilotaras</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1959\" target=\"_blank\" rel=\"noopener noreferrer\">#1959</a></li>\n<li><a href=\"https://github.com/tsutton\" target=\"_blank\" rel=\"noopener noreferrer\">@tsutton</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1999\" target=\"_blank\" rel=\"noopener noreferrer\">#1999</a></li>\n<li><a href=\"https://github.com/manthanabc\" target=\"_blank\" rel=\"noopener noreferrer\">@manthanabc</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1957\" target=\"_blank\" rel=\"noopener noreferrer\">#1957</a></li>\n<li><a href=\"https://github.com/lastmjs\" target=\"_blank\" rel=\"noopener noreferrer\">@lastmjs</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1990\" target=\"_blank\" rel=\"noopener noreferrer\">#1990</a></li>\n<li><a href=\"https://github.com/YXL76\" target=\"_blank\" rel=\"noopener noreferrer\">@YXL76</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/2042\" target=\"_blank\" rel=\"noopener noreferrer\">#2042</a></li>\n</ul>",
            "url": "https://boajs.dev/blog/2022/06/10/boa-release-15",
            "title": "Boa release v0.15",
            "summary": "Summary",
            "date_modified": "2022-06-10T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2022/03/15/boa-release-14",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"summary\">Summary<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#summary\" class=\"hash-link\" aria-label=\"Direct link to Summary\" title=\"Direct link to Summary\">​</a></h2>\n<p>Boa v0.14 is here! After almost 6 months of development, we are very happy to present you the newest release of the Boa\nJavaScript engine. Boa makes it easy to embed a JS engine in your projects, and you can even use it from webassembly. See\nthe <a href=\"https://boajs.dev/about\">about</a> page for more info. Together with this release, we present you: A new way to contribute to Boa, a virtual machine, usable examples and much more.</p>\n<p>Boa currently supports part of the JavaScript language. In this release, our conformance has grown from 41.01% to 49.74%\nin the official ECMAScript Test Suite (Test262). The engine now passes 43,986 tests, coming from 33,192 in Boa 0.13\n(32.5% increase), and we have closed 40 issues and merged 137 pull requests. You can check the full list of changes\n<a href=\"https://github.com/boa-dev/boa/blob/v0.14/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>, and the full information on conformance\n<a href=\"https://boa-dev.github.io/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa-has-moved\">Boa has moved<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#boa-has-moved\" class=\"hash-link\" aria-label=\"Direct link to Boa has moved\" title=\"Direct link to Boa has moved\">​</a></h2>\n<p>First off, some breaking changes!\nBoa is now <a href=\"https://crates.io/crates/boa_engine\" target=\"_blank\" rel=\"noopener noreferrer\"><code>boa_engine</code></a> on crates.io. This should bring it in line with our other packages, and allows us to resolve the <a href=\"https://github.com/boa-dev/boa/issues/230\" target=\"_blank\" rel=\"noopener noreferrer\">casing issue</a> we had with Boa previously. It should just be a case of changing your dependencies in cargo.toml to the new destination. The old <a href=\"https://crates.io/crates/boa\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Boa</code></a> crate will no longer receive any updates.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-ecmascript-features\">New ECMAScript features<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#new-ecmascript-features\" class=\"hash-link\" aria-label=\"Direct link to New ECMAScript features\" title=\"Direct link to New ECMAScript features\">​</a></h2>\n<p>Boa v0.14 ships with support for <code>Object.getOwnPropertyNames</code>, <code>Object.getOwnPropertySymbols</code>, <code>Object.prototype.hasOwnProperty</code>, <code>Array.from</code>, <code>AggregateError</code>, <code>Typed Arrays</code>, <code>Proxy</code>, <code>toLocaleString()</code>, <code>Symbol.prototype.valueOf</code>, <code>Array.prototype.at()</code>, <code>String.fromCharCode</code>, <code>Object.hasOwn</code>, <code>Object.fromEntries</code>, <code>Proxy</code>, <code>Array.prototype.findLast</code>, <code>Array.prototype.findLastIndex</code>, <code>console.trace</code>, <code>String.raw( template, ...substitutions )</code>, and <a href=\"https://github.com/boa-dev/boa/blob/v0.14/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">more</a>. There's also been several bug fixes and internal improvements, such as <a href=\"https://github.com/boa-dev/boa/pull/1684\" target=\"_blank\" rel=\"noopener noreferrer\">switching to Bors</a> for our CI management.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"virtual-machine\">Virtual Machine<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#virtual-machine\" class=\"hash-link\" aria-label=\"Direct link to Virtual Machine\" title=\"Direct link to Virtual Machine\">​</a></h2>\n<p>The biggest change in this release has definitely been the switch of the main implementation to a Virtual Machine. The\nJavaScript code first gets parsed into AST, then compiled into op-codes, and finally executed in the VM. This adds some\nextra steps, which, for now, have reduced the performance of the engine. We hope to fix some of these degradations over the course of the next few releases so hang tight. The new VM opens the door for many great features in the future (we're looking at you, async/await), and allows some nicer optimizations in the parsing and compilation phases in which we have already started working (such as <a href=\"https://github.com/boa-dev/boa/pull/1829\" target=\"_blank\" rel=\"noopener noreferrer\">#1829</a> and\n<a href=\"https://github.com/boa-dev/boa/pull/1849\" target=\"_blank\" rel=\"noopener noreferrer\">#1849</a>).</p>\n<p>This move towards a VM has also brought one great new feature, generator execution (<a href=\"https://github.com/boa-dev/boa/pull/1790\" target=\"_blank\" rel=\"noopener noreferrer\">#1790</a>).\nYou can find out more about how to use the VM <a href=\"https://github.com/boa-dev/boa/blob/main/docs/vm.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<img class=\"light\" src=\"https://boajs.dev/images/2022-03-15/boa_architecture_light.svg\">\n<img class=\"dark\" src=\"https://boajs.dev/images/2022-03-15/boa_architecture_dark.svg\">\n<br>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa-opens-financial-contributions\">Boa opens financial contributions<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#boa-opens-financial-contributions\" class=\"hash-link\" aria-label=\"Direct link to Boa opens financial contributions\" title=\"Direct link to Boa opens financial contributions\">​</a></h2>\n<p>In the past months, due to the big and steady progress on Boa, we have received multiple requests to contribute to Boa\nfinancially. From now on, anyone can contribute with either a recurring donation, or a one-time contribution in our\n<a href=\"https://opencollective.com/boa\" target=\"_blank\" rel=\"noopener noreferrer\">OpenCollective page</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"what-does-this-mean-for-boa\">What does this mean for Boa?<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#what-does-this-mean-for-boa\" class=\"hash-link\" aria-label=\"Direct link to What does this mean for Boa?\" title=\"Direct link to What does this mean for Boa?\">​</a></h3>\n<p>Being able to receive financial contributions won't directly show a change in Boa development, but depending on how much\nfunding we get, we are already planning next steps. Having more motivated contributors would be the first step. We all\nwant to spend more of our free time in boa, and receiving a financial compensation for it is definitely making the team\nmembers eager to continue contributing.</p>\n<p>But that is not our only idea. We would like to create a reproducible benchmarking platform. Currently, we just use GitHub\nactions for benchmarking, which is useful to get some general ideas on how some changes affect the performance of the\nengine. However, they have a high variability (up to 10%), meaning that we can definitely see changes if they are big, but it's\nimpossible to see differences if changes are minimal (1-2%, for example). Having the infrastructure to do proper performance\ntesting would require using dedicated CPUs, for example, which could be financed using the Boa Open Collective.</p>\n<p>On the development side, there are some very big projects that require deep involvement from the team. Priorities include (not neccesarily in order):</p>\n<ul>\n<li><a href=\"https://github.com/boa-dev/boa/projects/3\" target=\"_blank\" rel=\"noopener noreferrer\">Async/Await support</a>.</li>\n<li>Better <a href=\"https://github.com/boa-dev/boa/projects/5\" target=\"_blank\" rel=\"noopener noreferrer\">completion records</a> implementation</li>\n<li>Performance improvement across the board.</li>\n<li>Future implementation of Shapes/Hidden Classes.</li>\n<li>Being able to measure against other engines.</li>\n<li>Improved conformance of the EcmaScript specification.</li>\n<li>Integration with <a href=\"https://github.com/unicode-org/icu4x\" target=\"_blank\" rel=\"noopener noreferrer\">ICU4X</a> for Intl and future Temporal implementation.</li>\n</ul>\n<p>Implementing a <a href=\"https://github.com/boa-dev/boa/discussions/1531\" target=\"_blank\" rel=\"noopener noreferrer\">proper API</a> for Rust crates that want to embed Boa as they\nlike, or a <a href=\"https://github.com/boa-dev/boa/issues/332\" target=\"_blank\" rel=\"noopener noreferrer\">C API</a> so that other software, not written in Rust, can use Boa,\nare also a priority, and implementing all the new built-in objects to achieve 100% conformance with the ECMAScript\nspecification is also a must. All this takes time, and we will need to finance developers working on these big issues.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"can-i-contribute-differently\">Can I contribute differently?<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#can-i-contribute-differently\" class=\"hash-link\" aria-label=\"Direct link to Can I contribute differently?\" title=\"Direct link to Can I contribute differently?\">​</a></h3>\n<p>If financial contribution is not your strength, you can contribute by asking to be assigned to one of our\n<a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+no%3Aassignee\" target=\"_blank\" rel=\"noopener noreferrer\">open issues</a>, and asking for mentoring if you\ndon't know your way around the engine. Our <a href=\"https://github.com/boa-dev/boa/blob/main/CONTRIBUTING.md\" target=\"_blank\" rel=\"noopener noreferrer\">contribution guide</a>\nshould help you here. If you are more used to working with JavaScript or frontend web development, we also\nwelcome help to improve our web presence, either in <a href=\"https://github.com/boa-dev/boa-dev.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">our website</a>, or in\nour <a href=\"https://github.com/boa-dev/boa/issues/820\" target=\"_blank\" rel=\"noopener noreferrer\">testing representation</a> page or benchmarks page. You can also contribute to\nour Criterion benchmark comparison GitHub <a href=\"https://github.com/boa-dev/criterion-compare-action\" target=\"_blank\" rel=\"noopener noreferrer\">action</a>.</p>\n<p>We are also looking to improve the documentation of the engine, both for developers of the engine itself and for users of the\nengine. Feel free to contact us in <a href=\"https://discord.gg/tUFFk9Y\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a>.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h3>\n<p>Last but certainly not least, a big <strong>Thank You</strong> to all the contributors of Boa.\nIt's not often we list them but we would like to say thank you to the new contributors who joined for the last release.</p>\n<h4 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you-new-contributors\">Thank you New Contributors<a href=\"https://boajs.dev/blog/2022/03/15/boa-release-14#thank-you-new-contributors\" class=\"hash-link\" aria-label=\"Direct link to Thank you New Contributors\" title=\"Direct link to Thank you New Contributors\">​</a></h4>\n<ul>\n<li><a href=\"https://github.com/abhishekc-sharma\" target=\"_blank\" rel=\"noopener noreferrer\">@abhishekc-sharma</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1612\" target=\"_blank\" rel=\"noopener noreferrer\">#1612</a></li>\n<li><a href=\"https://github.com/kevinputera\" target=\"_blank\" rel=\"noopener noreferrer\">@kevinputera</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1606\" target=\"_blank\" rel=\"noopener noreferrer\">#1606</a></li>\n<li><a href=\"https://github.com/nrabulinski\" target=\"_blank\" rel=\"noopener noreferrer\">@nrabulinski</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1614\" target=\"_blank\" rel=\"noopener noreferrer\">#1614</a></li>\n<li><a href=\"https://github.com/hle0\" target=\"_blank\" rel=\"noopener noreferrer\">@hle0</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1618\" target=\"_blank\" rel=\"noopener noreferrer\">#1618</a></li>\n<li><a href=\"https://github.com/nekevss\" target=\"_blank\" rel=\"noopener noreferrer\">@nekevss</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1613\" target=\"_blank\" rel=\"noopener noreferrer\">#1613</a></li>\n<li><a href=\"https://github.com/lowr\" target=\"_blank\" rel=\"noopener noreferrer\">@lowr</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1628\" target=\"_blank\" rel=\"noopener noreferrer\">#1628</a></li>\n<li><a href=\"https://github.com/Nimpruda\" target=\"_blank\" rel=\"noopener noreferrer\">@Nimpruda</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1634\" target=\"_blank\" rel=\"noopener noreferrer\">#1634</a></li>\n<li><a href=\"https://github.com/atouchet\" target=\"_blank\" rel=\"noopener noreferrer\">@atouchet</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1638\" target=\"_blank\" rel=\"noopener noreferrer\">#1638</a></li>\n<li><a href=\"https://github.com/praveenbakkal\" target=\"_blank\" rel=\"noopener noreferrer\">@praveenbakkal</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1680\" target=\"_blank\" rel=\"noopener noreferrer\">#1680</a></li>\n<li><a href=\"https://github.com/bsinky\" target=\"_blank\" rel=\"noopener noreferrer\">@bsinky</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1665\" target=\"_blank\" rel=\"noopener noreferrer\">#1665</a></li>\n<li><a href=\"https://github.com/TheDoctor314\" target=\"_blank\" rel=\"noopener noreferrer\">@TheDoctor314</a> who made their first contribution in <a href=\"https://github.com/boa-dev/boa/pull/1691\" target=\"_blank\" rel=\"noopener noreferrer\">#1691</a></li>\n</ul>",
            "url": "https://boajs.dev/blog/2022/03/15/boa-release-14",
            "title": "Boa release v0.14",
            "summary": "Summary",
            "date_modified": "2022-03-15T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2021/09/30/boa-release-13",
            "content_html": "<p>Boa v0.13 is here! Boa is a JavaScript engine written in the Rust programming language. It makes it easy to embed a JS engine in your projects, and you can even use it from webassembly. See the <a href=\"https://boajs.dev/about\">about</a> page for more info.</p>\n<p>We currently support part of the language. In this release, our conformance has grown to 41.97% of the official ECMAScript Test Suite (Test262). We have closed 40 issues and merged 105 pull requests. You can check the full list of changes <a href=\"https://github.com/boa-dev/boa/blob/v0.13/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>This release brings some new features, such as support for calling Rust closures from JavaScript to improve better interopability between JS and Rust.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"ecmascript-language-features\">ECMAScript language features<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#ecmascript-language-features\" class=\"hash-link\" aria-label=\"Direct link to ECMAScript language features\" title=\"Direct link to ECMAScript language features\">​</a></h2>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges\" target=\"_blank\" rel=\"noopener noreferrer\">named capture groups</a> are now implemented and enabled.</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">RE_DATE</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token regex regex-delimiter\" style=\"color:#36acaa\">/</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">(?&lt;</span><span class=\"token regex regex-source language-regex group punctuation group-name variable\" style=\"color:#36acaa\">year</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">&gt;</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">[</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">0</span><span class=\"token regex regex-source language-regex char-class range range-punctuation operator\" style=\"color:#393A34\">-</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">9</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">]</span><span class=\"token regex regex-source language-regex quantifier number\" style=\"color:#36acaa\">{4}</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">)</span><span class=\"token regex regex-source language-regex\" style=\"color:#36acaa\">-</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">(?&lt;</span><span class=\"token regex regex-source language-regex group punctuation group-name variable\" style=\"color:#36acaa\">month</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">&gt;</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">[</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">0</span><span class=\"token regex regex-source language-regex char-class range range-punctuation operator\" style=\"color:#393A34\">-</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">9</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">]</span><span class=\"token regex regex-source language-regex quantifier number\" style=\"color:#36acaa\">{2}</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">)</span><span class=\"token regex regex-source language-regex\" style=\"color:#36acaa\">-</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">(?&lt;</span><span class=\"token regex regex-source language-regex group punctuation group-name variable\" style=\"color:#36acaa\">day</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">&gt;</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">[</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">0</span><span class=\"token regex regex-source language-regex char-class range range-punctuation operator\" style=\"color:#393A34\">-</span><span class=\"token regex regex-source language-regex char-class range\" style=\"color:#36acaa\">9</span><span class=\"token regex regex-source language-regex char-class char-class-punctuation punctuation\" style=\"color:#393A34\">]</span><span class=\"token regex regex-source language-regex quantifier number\" style=\"color:#36acaa\">{2}</span><span class=\"token regex regex-source language-regex group punctuation\" style=\"color:#393A34\">)</span><span class=\"token regex regex-delimiter\" style=\"color:#36acaa\">/</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> matchObj </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token constant\" style=\"color:#36acaa\">RE_DATE</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">exec</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"1999-12-31\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> year </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> matchObj</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">groups</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">year</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 1999</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> month </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> matchObj</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">groups</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">month</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 12</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> day </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> matchObj</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">groups</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">day</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// 31</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>This release brings support for the relative indexing method <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/at\" target=\"_blank\" rel=\"noopener noreferrer\">String.prototype.at()</a>. This makes it easier to fetch values at the end of an array or string instead of doing <code>str[str.length - 1]</code>.</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">const</span><span class=\"token plain\"> sentence </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"The quick brown fox jumps over the lazy dog.\"</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> index </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">5</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token template-string string\" style=\"color:#e3116c\">Using an index of </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">index</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string string\" style=\"color:#e3116c\"> the character returned is </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">${</span><span class=\"token template-string interpolation\">sentence</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">.</span><span class=\"token template-string interpolation method function property-access\" style=\"color:#d73a49\">at</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">(</span><span class=\"token template-string interpolation\">index</span><span class=\"token template-string interpolation punctuation\" style=\"color:#393A34\">)</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:#393A34\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:#e3116c\">`</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// expected output: \"Using an index of 5 the character returned is u\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>Other implemented language features include destructoring assignments, <code>replaceAll()</code>, <code>Object.values()</code>, <code>Object.keys()</code>, <code>Object.preventExtensions()</code>, <code>splice()</code>, <code>sort()</code>, spreading objects and more.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa-api\">Boa API<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#boa-api\" class=\"hash-link\" aria-label=\"Direct link to Boa API\" title=\"Direct link to Boa API\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"calling-rust-closures-from-javascript\">Calling Rust closures from JavaScript<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#calling-rust-closures-from-javascript\" class=\"hash-link\" aria-label=\"Direct link to Calling Rust closures from JavaScript\" title=\"Direct link to Calling Rust closures from JavaScript\">​</a></h3>\n<p>In addition to registering Rust functions as global JavaScript functions, our API has been expanded to register Rust closures. <a href=\"https://docs.rs/Boa/0.13.0/boa/context/struct.Context.html#method.register_global_closure\" target=\"_blank\" rel=\"noopener noreferrer\"><code>register_global_closure</code></a> allows to capture variables in closures that can be called from javascript:</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> context </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> add_value </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1.0</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">register_global_closure</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"addOne\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">move</span><span class=\"token plain\"> </span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token closure-params\">_</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> args</span><span class=\"token closure-params punctuation\" style=\"color:#393A34\">,</span><span class=\"token closure-params\"> _</span><span class=\"token closure-params closure-punctuation punctuation\" style=\"color:#393A34\">|</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> argument </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> args</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">as_number</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">unwrap</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token class-name\">Ok</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">argument </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> add_value</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token macro property\" style=\"color:#36acaa\">assert_eq!</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">context</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">eval</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"addOne(41)\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token operator\" style=\"color:#393A34\">?</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">42</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token function\" style=\"color:#d73a49\">into</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>To see the full capabilities of this feature, take a look at our <a href=\"https://github.com/boa-dev/boa/blob/main/boa/examples/closures.rs\" target=\"_blank\" rel=\"noopener noreferrer\">examples</a>. Thanks to @HalidOdat and @jedel1043 for their work on this.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"boa-prelude\">Boa prelude<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#boa-prelude\" class=\"hash-link\" aria-label=\"Direct link to Boa prelude\" title=\"Direct link to Boa prelude\">​</a></h3>\n<p>This release exposes a prelude of useful things that are already imported. This should make it more ergonomic to work with.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">use</span><span class=\"token plain\"> </span><span class=\"token namespace\" style=\"opacity:0.7\">boa</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token namespace\" style=\"opacity:0.7\">prelude</span><span class=\"token namespace punctuation\" style=\"opacity:0.7;color:#393A34\">::</span><span class=\"token operator\" style=\"color:#393A34\">*</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// This would import all the commonly-used things</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">fn</span><span class=\"token plain\"> </span><span class=\"token function-definition function\" style=\"color:#d73a49\">main</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">\t</span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> number </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">JSValue</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">number</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">3.1415</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">\t</span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> realm </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Realm</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">create</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">\t</span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> engine </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token class-name\">Interpreter</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">new</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">realm</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">\t</span><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">forward</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token operator\" style=\"color:#393A34\">&amp;</span><span class=\"token keyword\" style=\"color:#00009f\">mut</span><span class=\"token plain\"> engine</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Math.PI\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"test-262\">Test 262<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#test-262\" class=\"hash-link\" aria-label=\"Direct link to Test 262\" title=\"Direct link to Test 262\">​</a></h2>\n<p>Test262 is the implementation conformance test suite maintained by TC39. It's used by nearly all engines to measure how conformant they are to the specification. Boa pulls the tests in-tree and runs them against all PRs.</p>\n<p>Since v0.12 we have managed to pass 6391 more tests and are 7% more conformant. This has been great progress by all involved and we hope this continues to improve. Most of these new passes have come from refactors across the codebase which have had little impact on performance, in fact, v0.13 is much faster than v0.12.</p>\n<p>You can track Boa's conformance to the specification <a href=\"https://boa-dev.github.io/boa/test262/#\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keeping-up-with-rust\">Keeping up with Rust<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#keeping-up-with-rust\" class=\"hash-link\" aria-label=\"Direct link to Keeping up with Rust\" title=\"Direct link to Keeping up with Rust\">​</a></h2>\n<p>Rust is changing underneath us. This means we need to make sure our code is conforming the latest standards and we're taking advantage of the best optimizations the language can provide. In order to do this we rely on Clippy, this is Rust's in-house linter. We updated our code to <a href=\"https://github.com/boa-dev/boa/pull/1352\" target=\"_blank\" rel=\"noopener noreferrer\">respect the latest Rust version</a> and updated <a href=\"https://github.com/boa-dev/boa/pull/1356\" target=\"_blank\" rel=\"noopener noreferrer\">formatting</a>. Often a nice bonus of doing this is getting performance improvements for free as Clippy gets more \"smarter\". Thanks to @neeldug and @RageKnify for the work in this area.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"keeping-things-in-order\">Keeping things in order<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#keeping-things-in-order\" class=\"hash-link\" aria-label=\"Direct link to Keeping things in order\" title=\"Direct link to Keeping things in order\">​</a></h2>\n<p>Previously object properties were stored using <a href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/type.FxHashMap.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>FxHashMap</code></a>. Despite being very fast it didn't offer any guarantees about the order. Properties need to retain the same order they were entered. In order to achieve this we switched over to <a href=\"https://docs.rs/indexmap/1.7.0/indexmap/\" target=\"_blank\" rel=\"noopener noreferrer\">IndexMap</a>. Traits in Rust make this easy as IndexMap was designed to be a drop-in replacement for other HashMap implementations by following the same Trait. Thanks to IndexMap offering the possibility to use alternative hashing algorithms, we could continue using the fast <a href=\"https://docs.rs/rustc-hash/1.1.0/rustc_hash/struct.FxHasher.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>FxHasher</code></a> algorithm from rustc. Performance losses were minimal on some benchmarks and we actually made some gains in others. Thanks to @raskad for their work on this</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"vm\">VM<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#vm\" class=\"hash-link\" aria-label=\"Direct link to VM\" title=\"Direct link to VM\">​</a></h2>\n<p>There is still on-going work to utilise a VM, this is happening <a href=\"https://github.com/boa-dev/boa/blob/main/docs/vm.md#state-of-play\" target=\"_blank\" rel=\"noopener noreferrer\">alongside</a> how Boa runs today. Although its not exposed yet there has been plenty of refactorings to the VM in order to make it performant. Hopefully we can talk about this in more detail soon.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"opening-up-the-discussion\">Opening up the discussion<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#opening-up-the-discussion\" class=\"hash-link\" aria-label=\"Direct link to Opening up the discussion\" title=\"Direct link to Opening up the discussion\">​</a></h2>\n<p>As of this release Boa has begun to utilise Github's Discussions feature. You can catch more long-ranging projects <a href=\"https://github.com/boa-dev/boa/discussions\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2021/09/30/boa-release-13#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h2>\n<p>This has been the biggest release yet, there have been many features and fixes. We want to thank all the <a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2021-06-01&amp;to=2021-09-26&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">contributors</a> in this release, whether it was features, fixes or raising bugs.</p>\n<p>If you're interested in contributing to Boa, we have some <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"good first issues\"</a> and <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"issues where help is wanted\"</a>.</p>",
            "url": "https://boajs.dev/blog/2021/09/30/boa-release-13",
            "title": "Boa release v0.13",
            "summary": "Boa v0.13 is here! Boa is a JavaScript engine written in the Rust programming language. It makes it easy to embed a JS engine in your projects, and you can even use it from webassembly. See the about page for more info.",
            "date_modified": "2021-09-30T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2021/06/07/boa-release-12",
            "content_html": "<p>Boa v0.12 is here! Boa is a JavaScript parser, compiler and executor written in the Rust programming language. It makes it easy to embed a JS engine in your projects, and you can even use it from webassembly. See the <a href=\"https://boajs.dev/about\">About</a> page for more info.</p>\n<p>We currently support part of the language. In this release, our conformance has grown to 33.97% of the official ECMAScript Test Suite (Test262). In this release, we have closed 19 issues and merged 69 pull requests. You can check the full list of changes <a href=\"https://github.com/boa-dev/boa/blob/v0.12/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>Let's dive into the most relevant changes of this release.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"panic-free\">Panic-free<a href=\"https://boajs.dev/blog/2021/06/07/boa-release-12#panic-free\" class=\"hash-link\" aria-label=\"Direct link to Panic-free\" title=\"Direct link to Panic-free\">​</a></h2>\n<p>Boa now doesn't panic in any of the Test262 tests. This is a huge milestone, since it means that the engine itself can handle all of the edge cases. At least those proposed by the official ECMAScript test suite. We still recommend using <a href=\"https://doc.rust-lang.org/stable/std/panic/fn.catch_unwind.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code>std::panic::catch_unwind()</code></a> to execute arbitrary code, though.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"conformance-increase\">Conformance increase<a href=\"https://boajs.dev/blog/2021/06/07/boa-release-12#conformance-increase\" class=\"hash-link\" aria-label=\"Direct link to Conformance increase\" title=\"Direct link to Conformance increase\">​</a></h2>\n<p>In version 0.11 we were passing 31.59% of the Test262 suite. In this version, we have increased that coverage to <strong>33.97%</strong>. The increase might not seem much, but we now pass 1,924 new tests.</p>\n<p>Our conformance tester has also been improved, and thanks to the new APIs available in the engine, we were able to add complex functionality such as \"realm\" creation, cross-real symbols and overall, the inclusion of a partially complete <code>$262</code> object, ready for some testing.</p>\n<p>We have also added some useful lists of \"fixed\", \"broken\", \"ignored\" and \"fixed panics\" tests for each pull request. This will allow us to directly check individual tests on each PR and only re-run the new tests that are failing/panicking in order to properly fix them.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"new-built-in-objects-string-improvements-and-tostringtag\">New built-in objects, <code>string</code> improvements and <code>@@ToStringTag</code><a href=\"https://boajs.dev/blog/2021/06/07/boa-release-12#new-built-in-objects-string-improvements-and-tostringtag\" class=\"hash-link\" aria-label=\"Direct link to new-built-in-objects-string-improvements-and-tostringtag\" title=\"Direct link to new-built-in-objects-string-improvements-and-tostringtag\">​</a></h2>\n<p>Boa now has support for the <code>Reflect</code> and <code>Set</code> built-in objects. This grows the posibilities of the engine to be used in more real-world projects. On the same lines, we have added support for the <code>GetOwnProperty</code> for <code>string</code>. This means that we can use <code>[{index}]</code> to get the characters of a string. For example, <code>\"hello\"[0]</code> will return <code>\"h\"</code>.</p>\n<p>We have also added the <code>@@ToStringTag</code> well known symbol to most of the built-in objects. You can now run the following code, for example, and get the expected result:</p>\n<div class=\"language-javascript codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-javascript codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">let</span><span class=\"token plain\"> result </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">new</span><span class=\"token plain\"> </span><span class=\"token class-name\">Map</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token known-class-name class-name\">Symbol</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token property-access\">toStringTag</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token console class-name\">console</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token method function property-access\" style=\"color:#d73a49\">log</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">result</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Returns \"Map\"</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank you<a href=\"https://boajs.dev/blog/2021/06/07/boa-release-12#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank you\" title=\"Direct link to Thank you\">​</a></h2>\n<p>Everything in this release has been such a huge effort, we want to thank all the <a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2021-01-12&amp;to=2021-06-07&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">contributors</a> in this release, whether it was features, fixes or raising bugs.</p>\n<p>If you're interested in contributing to Boa, we have some <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"good first issues\"</a> and <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"issues where help is wanted\"</a>.</p>",
            "url": "https://boajs.dev/blog/2021/06/07/boa-release-12",
            "title": "Boa release v0.12",
            "summary": "Boa v0.12 is here! Boa is a JavaScript parser, compiler and executor written in the Rust programming language. It makes it easy to embed a JS engine in your projects, and you can even use it from webassembly. See the About page for more info.",
            "date_modified": "2021-06-07T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2021/01/14/boa-release-11",
            "content_html": "<p>Boa has reached a new release. v0.11, our biggest one yet!</p>\n<p>Since v0.10 we've closed 77 issues and merged 129 pull requests. The engine has been faster and more compliant to the spec. Below are some of the highlights but please see the <a href=\"https://github.com/boa-dev/boa/blob/main/CHANGELOG.md#0110-2021-01-14\" target=\"_blank\" rel=\"noopener noreferrer\">changelog</a> for more information.</p>\n<p>What is Boa? See the <a href=\"https://boajs.dev/about\">About</a> page for more info.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"test-262\">Test 262<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#test-262\" class=\"hash-link\" aria-label=\"Direct link to Test 262\" title=\"Direct link to Test 262\">​</a></h2>\n<p>Test262 is the implementation conformance test suite maintained by TC39. It's used by nearly all engines to measure how conformant they are to the specification. Boa pulls the tests in-tree and runs them against all PRs. You can find more about Test262 <a href=\"https://github.com/tc39/test262\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p>\n<p>Since v0.10 we have almost doubled on spec conformance, and reduced panics. A year ago Boa didn't even track itself against Test262 so it was difficult to know how compliant we were to the spec, today not only do we track all changes against Test262 but we can see progress on a PR to PR basis.</p>\n<!-- -->\n<img src=\"https://boajs.dev/assets/images/conformance_light-3c218c4c96d333a7307e622bb81b9524.png\" alt=\"Conformance graph\" class=\"themedComponent_mlkZ themedComponent--light_NVdE\"><img src=\"https://boajs.dev/assets/images/conformance_dark-aac8804eda4cf61ed855b1881622bd44.png\" alt=\"Conformance graph\" class=\"themedComponent_mlkZ themedComponent--dark_xIcU\">\n<p>Previously many tests failed to run as the test-runner was still being worked on. Those issues have been fixed and our tests jumped from 38k to 78K which is why the graph flips up above. Boa should never panic, however we've had many tests reveal areas where panics happen, this has helped us identify and apply correct fixes, to the point where our panics have gone from hundreds to under 50 (the graph above shows the dark red diminishing).</p>\n<p>For live tracking of conformance tests you can check <a href=\"https://boa-dev.github.io/boa/test262/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. Below is a snapshot of the previous version and today.</p>\n<div class=\"row\" style=\"display:flex;justify-content:space-around\"><section class=\"col-md-4\" id=\"version-latest\"><div class=\"card\"><div class=\"card-body\" style=\"padding:10px\"><h3>v0.10:</h3><ul class=\"list-group list-group-flush\"><li class=\"list-group-item\"><p>Total tests: <span class=\"total-tests\">38,706</span></p></li><li class=\"list-group-item\"><p>Passed tests: <span class=\"passed-tests\">6,960</span></p></li><li class=\"list-group-item\"><p>Ignored tests: <span class=\"ignored-tests\">5,748</span></p></li><li class=\"list-group-item\"><p>Failed tests: <span class=\"failed-tests\">25,998</span></p></li><li class=\"list-group-item\"><p>Conformance: <b>17.98%</b></p></li></ul><div class=\"info-link\"><a class=\"card-link\" href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#\"><span class=\"info-link\"></span></a></div></div></div></section><section class=\"col-md-4\" id=\"master-latest\"><div class=\"card\"><div class=\"card-body\" style=\"padding:10px\"><h3>v0.11:</h3><ul class=\"list-group list-group-flush\"><li class=\"list-group-item\"><p>Total tests: <span class=\"total-tests\">78,497</span></p></li><li class=\"list-group-item\"><p>Passed tests: <span class=\"passed-tests\">24,550</span></p></li><li class=\"list-group-item\"><p>Ignored tests: <span class=\"ignored-tests\">15,585</span></p></li><li class=\"list-group-item\"><p>Failed tests: <span class=\"failed-tests\">38,362 (24 ⚠)</span></p></li><li class=\"list-group-item\"><p>Conformance: <b>31.28%</b></p></li></ul><div class=\"info-link\"><a class=\"card-link\" href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#\"><span class=\"info-link\"></span></a></div></div></div></section><section class=\"col-md-4\" style=\"display:none\" id=\"old-versions\"></section></div>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"regress\">Regress<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#regress\" class=\"hash-link\" aria-label=\"Direct link to Regress\" title=\"Direct link to Regress\">​</a></h2>\n<p>In this release Boa switched from its own implementation (wrapping <code>regex</code>) to the <a href=\"https://github.com/ridiculousfish/regress\" target=\"_blank\" rel=\"noopener noreferrer\"><code>regress</code></a> engine for regular expressions. Regress is a crate aiming to implement ECMAScript compliant regular expressions and Boa makes use of (and contributes back to) that.</p>\n<p>While Regress is not 100% spec compliant this is something which is being worked on, also the switch gave us quite a performance boost in our <a href=\"https://boa-dev.github.io/boa/dev/bench/\" target=\"_blank\" rel=\"noopener noreferrer\">benchmarks</a> we're seeing almost 6X faster execution.</p>\n<!-- -->\n<!-- -->\n<img src=\"https://boajs.dev/assets/images/regex-bench-white-fb2dce206a98ce8731b6360d183a9f02.png\" alt=\"Conformance graph\" class=\"themedComponent_mlkZ themedComponent--light_NVdE\"><img src=\"https://boajs.dev/assets/images/regex-bench-dark-1cd027462942e18479a8d7306ed89802.png\" alt=\"Conformance graph\" class=\"themedComponent_mlkZ themedComponent--dark_xIcU\">\n<p>The above image shows a big drop in the middle of the graph, above <code>fb1b8d5</code> is where we switched over. Conformance went from 19.01% to 18.99% and introduced some panics, however many of those have since been fixed.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"iterating-over-bytes\">Iterating over bytes<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#iterating-over-bytes\" class=\"hash-link\" aria-label=\"Direct link to Iterating over bytes\" title=\"Direct link to Iterating over bytes\">​</a></h2>\n<p>Previously the lexer iterated over unicode chars (u32 code points), this wasn't strictly neccesary for Boa and we have instead changed the lexer to work over bytes (u8). Iterating over bytes rather than chars is inherently much faster, non-ascii UTF8 bytes are all &gt;=128, and we might only really care about those being correct when parsing idents. This is standard practise amongs lexical analyzers and even browsers read source code byte-by-byte, using the rules of the language's syntax to convert the source text into tokens.</p>\n<p>This was worked on by @jevancc and his <a href=\"https://github.com/boa-dev/boa/pull/915/files\" target=\"_blank\" rel=\"noopener noreferrer\">changes</a> have improved performance overall.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"embedding-examples\">Embedding examples<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#embedding-examples\" class=\"hash-link\" aria-label=\"Direct link to Embedding examples\" title=\"Direct link to Embedding examples\">​</a></h2>\n<p>We are still working on what the public API should look like, some of these decisions are driven by feedback and the ever-changing way which Boa works.<br>\n<!-- -->Not only you can run Boa against javascript today you can also embed your own objects and classes into the engine before it's ran.</p>\n<p>We've offered an <a href=\"https://github.com/boa-dev/boa/blob/main/boa/examples/classes.rs\" target=\"_blank\" rel=\"noopener noreferrer\">example</a> to show how a class can be constructed in Rust then added to the environment before executing your scripts.\nThis should offer a great insight into how you can interop Rust with JavaScript by using Boa.</p>\n<p>Below are some of the more recent functions available from the Context object for you to add your own functionality.</p>\n<div class=\"language-rust codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_biex\"><pre tabindex=\"0\" class=\"prism-code language-rust codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Rust implementation of a function injected into the environment</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">register_global_function</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Rust implementation of a class injected into the environment</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">register_global_class</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token comment\" style=\"color:#999988;font-style:italic\">// Rust implementation of a property injected into the environment</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token class-name\">Context</span><span class=\"token punctuation\" style=\"color:#393A34\">::</span><span class=\"token function\" style=\"color:#d73a49\">register_global_property</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre><div class=\"buttonGroup__atx\"><button type=\"button\" aria-label=\"Copy code to clipboard\" title=\"Copy\" class=\"clean-btn\"><span class=\"copyButtonIcons_eSgA\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" class=\"copyButtonIcon_y97N\"><path fill=\"currentColor\" d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"></path></svg><svg viewBox=\"0 0 24 24\" class=\"copyButtonSuccessIcon_LjdS\"><path fill=\"currentColor\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"></path></svg></span></button></div></div></div>\n<p>If there are any examples you would like added, please raise an issue on the main repository.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"generating-bytecode\">Generating bytecode<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#generating-bytecode\" class=\"hash-link\" aria-label=\"Direct link to Generating bytecode\" title=\"Direct link to Generating bytecode\">​</a></h2>\n<p>Today Boa walks the tree of the AST, although easy to implement it's not ideal for performance.<br>\n<!-- -->We are looking to do code generation which can then be interpreted. This gradual process may happen over many releases until at some point we can switch implementations under the hood. Our steps are:</p>\n<ul>\n<li><del>Experiment with VM Path on isolated branch</del></li>\n<li><del>Experiment with generating more simpler instructions</del></li>\n<li>Build up parity with current implementation</li>\n<li>Run test suite over VM path including conformance tests</li>\n<li>Switch over once performance is steady</li>\n<li>Optimize code generation and intreperter</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"thank-you\">Thank You<a href=\"https://boajs.dev/blog/2021/01/14/boa-release-11#thank-you\" class=\"hash-link\" aria-label=\"Direct link to Thank You\" title=\"Direct link to Thank You\">​</a></h2>\n<p>Everything in this release has been such a huge effort, we want to thank all the <a href=\"https://github.com/boa-dev/boa/graphs/contributors?from=2020-10-02&amp;to=2021-01-12&amp;type=c\" target=\"_blank\" rel=\"noopener noreferrer\">contributors</a> in this release, whether it was features, fixes or raising bugs.</p>\n<p>If you're interested in contributing to Boa, we have some <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"good first issues\"</a> and <a href=\"https://github.com/boa-dev/boa/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22\" target=\"_blank\" rel=\"noopener noreferrer\">\"issues where help is wanted\"</a>.</p>",
            "url": "https://boajs.dev/blog/2021/01/14/boa-release-11",
            "title": "Boa release v0.11",
            "summary": "Boa has reached a new release. v0.11, our biggest one yet!",
            "date_modified": "2021-01-14T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        },
        {
            "id": "https://boajs.dev/blog/2020/10/02/boa-release-10",
            "content_html": "<p>Boa is an experimental Javascript lexer, parser and compiler written in Rust. It has support for some of the language, can be embedded in Rust projects fairly easily and also used from the command line.\nBoa also exists to serve as a Rust implementation of the EcmaScript specification, there will be areas where we can utilise Rust and its fantastic ecosystem to make a fast, concurrent and safe engine.</p>\n<p>We have a long way to go, however v0.10 has been the biggest release to date, with 138 issues closed!</p>\n<p>We have some highlights, but if you prefer to read the full changelog, you can do that <a href=\"https://github.com/boa-dev/boa/blob/main/CHANGELOG.md\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"test262\">Test262<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#test262\" class=\"hash-link\" aria-label=\"Direct link to Test262\" title=\"Direct link to Test262\">​</a></h2>\n<p>One question we've been asked for a long time is \"how conformant are you to the spec?\". It's been tough to answer as we've been unable to run against the official test suite.</p>\n<p>Test262 is the official ECMAScript Test Suite and exists to provide conformance tests for the latest drafts of the Ecma specification. It is used for all engines, you can even run it in your <a href=\"https://bakkot.github.io/test262-web-runner/\" target=\"_blank\" rel=\"noopener noreferrer\">browser</a>.<br>\n<!-- -->Thanks to @Razican in v0.10 we now have a test harness that allows us to run it against Boa at any time.</p>\n<p>This is a new crate inside the Boa repository that can parse through all of the tests (roughly 40,000 of them) in under 10 minutes and tell us how conformant we are.</p>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"image\" src=\"https://boajs.dev/assets/images/test262-screenshot-6dec809e4ab236a4655e0277075e639d.png\" width=\"1216\" height=\"654\" class=\"img_ev3q\"></p>\n<p>Today Boa has <span class=\"x x-first x-last\">18</span>% conformity to the specification. We'll be keeping an eye on this number over the releases. We expect to achieve around 30% by 0.11 due to some of the fixes we're adding which should pass a few thousand tests.</p>\n<p>These are run via Github Actions against PRs and for our main branch so that we can keep track of where we are and if there are regressions.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"built-ins\">Built-ins<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#built-ins\" class=\"hash-link\" aria-label=\"Direct link to Built-ins\" title=\"Direct link to Built-ins\">​</a></h2>\n<p>We've added support for <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Date</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Map</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" target=\"_blank\" rel=\"noopener noreferrer\">well-known symbols</a>. Supporting Well-known symbols unblocks a lot of work around adding <code>@@iterators</code> to some of our global objects which is coming up in the next release.<br>\n<!-- -->Both <code>Math</code> and <code>Number</code> have had their remaining methods implemented.</p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"lexer\">Lexer<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#lexer\" class=\"hash-link\" aria-label=\"Direct link to Lexer\" title=\"Direct link to Lexer\">​</a></h2>\n<p>The lexer has been rebuilt from scratch. Just like the old parser it was a single file before looping through and becoming unmaintainable. Today we've reorganised it into separate modules which know how to lex certain areas. The new lexer <a href=\"https://github.com/boa-dev/boa/issues/294\" target=\"_blank\" rel=\"noopener noreferrer\">now supports goal symbols</a> and can now tokenize with the correct context at any time.</p>\n<h3 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"goal-symbols\">Goal Symbols<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#goal-symbols\" class=\"hash-link\" aria-label=\"Direct link to Goal Symbols\" title=\"Direct link to Goal Symbols\">​</a></h3>\n<p>Our issue with goal symbols is explained by the V8 team <a href=\"https://v8.dev/blog/understanding-ecmascript-part-3#lexical-grammar\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>\n<p>Previously we weren't distinguishing between the contexts where some input elements are permitted and some are not, so lexing <code>/</code> would yeild a <code>division</code> symbols when it should be a <code>RegularExpressionLiteral</code> for example. This change unblocked us being able to run Test262.</p>\n<p>Performance wise it is much faster for larger files. The lexer is far more efficient at streaming tokens to the parser than previously so in some scenarios we have big gains.</p>\n<p><em>You can see all the benchmarks <a href=\"https://boa-dev.github.io/boa/dev/bench/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></em></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"repl-syntax-highlighting\">Repl syntax highlighting<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#repl-syntax-highlighting\" class=\"hash-link\" aria-label=\"Direct link to Repl syntax highlighting\" title=\"Direct link to Repl syntax highlighting\">​</a></h2>\n<p>Syntax highlighting was added to the repl this release thanks to @HalidOdat<br>\n<!-- -->Our repl is made possible due to the great work of <a href=\"https://github.com/kkawakam/rustyline\" target=\"_blank\" rel=\"noopener noreferrer\">RustyLine</a></p>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"image\" src=\"https://boajs.dev/assets/images/syntaxHighlighting-15e6ee1c89ea7aa912f12feb0bed085a.gif\" width=\"1507\" height=\"223\" class=\"img_ev3q\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_LWe7\" id=\"looking-forward\">Looking forward<a href=\"https://boajs.dev/blog/2020/10/02/boa-release-10#looking-forward\" class=\"hash-link\" aria-label=\"Direct link to Looking forward\" title=\"Direct link to Looking forward\">​</a></h2>\n<p>There are plenty of fixes and performance changes still needed, we also hope to experiment with producing Bytecode from our AST in future. Test262 coverage will almost certainly increase, and we are polishing the public API for easier use when embedding into other Rust projects.</p>\n<p>Thanks to all those who contributed to 0.10, you can see the names in the full changelog linked above.</p>\n<p>You can checkout Boa via <a href=\"https://github.com/boa-dev/boa\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a> or on <a href=\"https://crates.io/crates/Boa\" target=\"_blank\" rel=\"noopener noreferrer\">crates.io</a></p>",
            "url": "https://boajs.dev/blog/2020/10/02/boa-release-10",
            "title": "Boa release v0.10",
            "summary": "Boa is an experimental Javascript lexer, parser and compiler written in Rust. It has support for some of the language, can be embedded in Rust projects fairly easily and also used from the command line.",
            "date_modified": "2020-10-02T00:00:00.000Z",
            "author": {
                "name": "Boa Developers"
            },
            "tags": [
                "post"
            ]
        }
    ]
}